(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{477:function(e,t,r){"use strict";r.r(t);var o=r(56),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("center",[r("h1",[e._v("光影")]),r("p",[e._v("Shaders")])]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),r("p",[e._v("非常潦草的试译，不建议阅读。如无法科学上网，可阅读附在最后的"),r("a",{attrs:{href:"#%E9%99%84%E5%8E%9F%E6%96%87"}},[e._v("原文")]),e._v("。")]),e._v(" "),r("p",[e._v("光影和着色器都是 Shader 的翻译。下面统一翻译成着色器。")]),e._v(" "),r("p",[e._v("我没有能力写光影制作教程，想学光影的朋友可以阅读szszss的"),r("a",{attrs:{href:"http://blog.hakugyokurou.net/?page_id=1655",target:"_blank",rel:"noopener noreferrer"}},[e._v("Shadersmod教程"),r("OutboundLink")],1),e._v("，不要担心教程太老，不同版本的光影包大同小异。关键是对渲染管线的理解（找点文章读一读）、对GLSL语言的掌握（语法不算难）和一揽子图形学技巧（难点，需要投入时间钻研），这个文档不过是一个说明书，告诉你可以使用哪些东西而已。")])]),e._v(" "),r("h2",{attrs:{id:"概述-overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述-overview"}},[e._v("#")]),e._v(" 概述|Overview")]),e._v(" "),r("p",[e._v("着色器模块（The Shaders Mod）使用了一条"),r("a",{attrs:{href:"https://learnopengl-cn.github.io/05%20Advanced%20Lighting/08%20Deferred%20Shading/",target:"_blank",rel:"noopener noreferrer"}},[e._v("延迟渲染管线（deferred rendering pipeline）"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[e._v("管线首先处理G-Buffer着色器（gbuffer shaders）。它们将数据渲染成纹理（textures），而纹理会被发送到合成着色器（composite shaders）中。")]),e._v(" "),r("p",[e._v("可选的延迟着色器（deferred shaders）可以被添加到地形和水的渲染之间。")]),e._v(" "),r("p",[e._v("接着合成着色器把接收到的内容渲染成纹理，并将结果发送到最终着色器（the final shader）中。")]),e._v(" "),r("p",[e._v("最终着色器直接将结果输出到屏幕。")]),e._v(" "),r("h2",{attrs:{id:"着色器文件-shader-files"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#着色器文件-shader-files"}},[e._v("#")]),e._v(" 着色器文件|Shader Files")]),e._v(" "),r("p",[e._v('所有着色器文件都被放在光影包中的 "shaders" 文件夹下。')]),e._v(" "),r("p",[e._v("着色器源文件使用运行它们的程序的名字，并根据它们的类型添加扩展名。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("扩展名")]),e._v(" "),r("th",[e._v("类型")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v(".vsh")]),e._v(" "),r("td",[e._v("顶点着色器（Vertex shader）")])]),e._v(" "),r("tr",[r("td",[e._v(".gsh")]),e._v(" "),r("td",[e._v("几何着色器（Geometry shader）")])]),e._v(" "),r("tr",[r("td",[e._v(".fsh")]),e._v(" "),r("td",[e._v("片段着色器（Fragment shader）")])])])]),e._v(" "),r("p",[e._v('几何着色器需要带布局限定符（layout qualifiers）的 OpenGL3.2 或者带有 "maxVerticesOut" 配置的 GL_ARB_geometry_shader4 拓展。')]),e._v(" "),r("h2",{attrs:{id:"颜色附件-color-attachments"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#颜色附件-color-attachments"}},[e._v("#")]),e._v(" 颜色附件|Color Attachments")]),e._v(" "),r("p",[e._v("着色器之间的数据传递是通过颜色附件（color attachments）来完成。")]),e._v(" "),r("p",[e._v("所有设备至少都有4个颜色附件，对于支持它的机器，有多达16个。")]),e._v(" "),r("p",[e._v("MacOS 限制为8个颜色附件，即便是 modern GPU。")]),e._v(" "),r("p",[e._v("在延迟、合成、和最终着色器中，它们由 gcolor、gdepth、gnormal、composite、gaux1、gaux2、gaux3和gaux4 uniforms 引用。")]),e._v(" "),r("p",[e._v("（colortex0 到 colortexF 可以替代 gcolor, gdepth 等）")]),e._v(" "),r("p",[e._v("如果不谈名字的话，除了前两个以外，所有的颜色附件都是相同的，可以用于任何目的。")]),e._v(" "),r("p",[e._v("第一个，gcolor 将在渲染之前清除颜色并设为当前迷雾的颜色。")]),e._v(" "),r("p",[e._v("第二个，gdepth 将在渲染之前清除颜色并设为纯白色，并且使用了适合存储深度值的更高精度的缓冲区。")]),e._v(" "),r("p",[e._v("其他颜色附件将在渲染之前清除颜色并设置为 alpha 为 0 的黑色。")]),e._v(" "),r("br"),e._v(" "),r("p",[e._v('每个颜色附件使用双缓冲区（A and B），逻辑名为 "main" 和 "alt"，可以用作'),r("a",{attrs:{href:"https://blog.csdn.net/Sun19910114/article/details/52983553",target:"_blank",rel:"noopener noreferrer"}},[e._v("乒乓缓冲（ping-pong buffers）"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[e._v("当两个缓冲区切换，main/alt 与 A/B 之间的对应关系被反转。")]),e._v(" "),r("p",[e._v('G-Buffer程序总是在 "main" 缓冲（仅限 gaux1-4）中读写（它们不应该同时在同一个缓冲中读写）。')]),e._v(" "),r("p",[e._v('延迟/合成程序（deferred/composite programs）总是从 "main" 中读取并写入 "alt" 缓冲。')]),e._v(" "),r("p",[e._v("当一个延迟/合成程序被渲染，它写入的缓冲被反转，以便接下来的程序将当前的输出视为输入。")]),e._v(" "),r("br"),e._v(" "),r("p",[e._v('属性 "flip.<program>.<buffer>=<true|false>" 可用于启用或禁用 the flip independant of the buffer write.')]),e._v(" "),r("p",[e._v('The virtual programs "deferred_pre" and "composite_pre" can be used for buffer flipping before the deferred/composite pass.')]),e._v(" "),r("br"),e._v(" "),r("p",[e._v('输出的颜色附件使用片段着色器中的 "/* DRAWBUFFERS:XYZ */" 注释进行设置。')]),e._v(" "),r("p",[e._v("Gbuffers, deferred 和 composite 程序可以向任何颜色附件写入，但是同时不能超过8个。")]),e._v(" "),r("p",[e._v("如果没有设置输出的颜色附件，程序将会对前8个颜色附件写入。")]),e._v(" "),r("br"),e._v(" "),r("p",[e._v("写入合成着色器（composite shader）中的颜色附件时，混合（blending）被禁用。")]),e._v(" "),r("p",[e._v("Writing to color attachments that the composite shader also reads from will generate artifacts (unless you just copy the original contents)")]),e._v(" "),r("br"),e._v(" "),r("p",[e._v("The vertex and fragment configuration parsing is affected by the preprocessor conditional compilation directives.")]),e._v(" "),r("p",[e._v("The following preprocessor directives are currently recognized:")]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("undef")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("ifdef")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("ifndef")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("if")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("if")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[e._v("defined "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("if")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("defined "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("elif")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("elif")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[e._v("defined "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("elif")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("defined "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("macro"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("else")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("endif")])]),e._v("\n")])])]),r("br"),e._v(" "),r("p",[e._v('可以用 "F3+R" 或用 "/reloadShaders" 指令重载光影包。')]),e._v(" "),r("h2",{attrs:{id:"着色器程序-shader-programs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#着色器程序-shader-programs"}},[e._v("#")]),e._v(" 着色器程序|Shader Programs")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("名字")]),e._v(" "),r("th",[e._v("渲染的对象")]),e._v(" "),r("th",[e._v("未定义时使用")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("<none>")]),e._v(" "),r("td",[e._v("GUI和菜单")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("以下为 Shadow map")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("shadow")]),e._v(" "),r("td",[e._v("everything in shadow pass")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("shadow_solid")]),e._v(" "),r("td",[e._v("<not used>")]),e._v(" "),r("td",[e._v("shadow")])]),e._v(" "),r("tr",[r("td",[e._v("shadow_cutout")]),e._v(" "),r("td",[e._v("<not used>")]),e._v(" "),r("td",[e._v("shadow")])]),e._v(" "),r("tr",[r("td",[e._v("以下为 GBuffers")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_basic")]),e._v(" "),r("td",[e._v("栓绳、方块选择框")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_textured")]),e._v(" "),r("td",[e._v("粒子")]),e._v(" "),r("td",[e._v("gbuffers_basic")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_textured_lit")]),e._v(" "),r("td",[e._v("lit_particles, 世界边界")]),e._v(" "),r("td",[e._v("gbuffers_textured")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_skybasic")]),e._v(" "),r("td",[e._v("天空、地平线、星星、虚空")]),e._v(" "),r("td",[e._v("gbuffers_basic")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_skytextured")]),e._v(" "),r("td",[e._v("日月")]),e._v(" "),r("td",[e._v("gbuffers_textured")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_clouds")]),e._v(" "),r("td",[e._v("云")]),e._v(" "),r("td",[e._v("gbuffers_textured")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_terrain")]),e._v(" "),r("td",[e._v("solid, cutout, cutout_mip")]),e._v(" "),r("td",[e._v("gbuffers_textured_lit")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_terrain_solid")]),e._v(" "),r("td",[e._v("<not used>")]),e._v(" "),r("td",[e._v("gbuffers_terrain")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_terrain_cutout_mip")]),e._v(" "),r("td",[e._v("<not used>")]),e._v(" "),r("td",[e._v("gbuffers_terrain")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_terrain_cutout")]),e._v(" "),r("td",[e._v("<not used>")]),e._v(" "),r("td",[e._v("gbuffers_terrain")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_damagedblock")]),e._v(" "),r("td",[e._v("被破坏的方块")]),e._v(" "),r("td",[e._v("gbuffers_terrain")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_block")]),e._v(" "),r("td",[e._v("方块实体")]),e._v(" "),r("td",[e._v("gbuffers_terrain")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_beaconbeam")]),e._v(" "),r("td",[e._v("信标光柱")]),e._v(" "),r("td",[e._v("gbuffers_textured")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_item")]),e._v(" "),r("td",[e._v("<not used>")]),e._v(" "),r("td",[e._v("gbuffers_textured_lit")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_entities")]),e._v(" "),r("td",[e._v("实体")]),e._v(" "),r("td",[e._v("gbuffers_textured_lit")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_entities_glowing")]),e._v(" "),r("td",[e._v("glowing entities, spectral effect")]),e._v(" "),r("td",[e._v("gbuffers_entities")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_armor_glint")]),e._v(" "),r("td",[e._v("glint on armor and handheld items")]),e._v(" "),r("td",[e._v("gbuffers_textured")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_spidereyes")]),e._v(" "),r("td",[e._v("eyes of spider, enderman and dragon")]),e._v(" "),r("td",[e._v("gbuffers_textured")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_hand")]),e._v(" "),r("td",[e._v("hand and opaque handheld objects")]),e._v(" "),r("td",[e._v("gbuffers_textured_lit")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_weather")]),e._v(" "),r("td",[e._v("雨雪")]),e._v(" "),r("td",[e._v("gbuffers_textured_lit")])]),e._v(" "),r("tr",[r("td",[e._v("以下为 Deferred")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("deferred_pre")]),e._v(" "),r("td",[e._v("<virtual> flip ping-pong buffers")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("deferred")]),e._v(" "),r("td",[e._v("<deferred>")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("deferred1")]),e._v(" "),r("td",[e._v("<deferred>")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("...")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("deferred15")]),e._v(" "),r("td",[e._v("<deferred>")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("以下为 GBuffers translucent")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_water")]),e._v(" "),r("td",[e._v("translucent")]),e._v(" "),r("td",[e._v("gbuffers_terrain")])]),e._v(" "),r("tr",[r("td",[e._v("gbuffers_hand_water")]),e._v(" "),r("td",[e._v("translucent handheld objects")]),e._v(" "),r("td",[e._v("gbuffers_hand")])]),e._v(" "),r("tr",[r("td",[e._v("以下为 Composite")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("composite_pre")]),e._v(" "),r("td",[e._v("<virtual> flip ping-pong buffers")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("composite")]),e._v(" "),r("td",[e._v("<composite>")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("composite1")]),e._v(" "),r("td",[e._v("<composite>")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("...")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("composite15")]),e._v(" "),r("td",[e._v("<composite>")]),e._v(" "),r("td",[e._v("<none>")])]),e._v(" "),r("tr",[r("td",[e._v("以下为 Final")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("final")]),e._v(" "),r("td",[e._v("<final>")]),e._v(" "),r("td",[e._v("<none>")])])])]),e._v(" "),r("p",[e._v("备注：")]),e._v(" "),r("ul",[r("li",[e._v("The programs shadow_solid, shadow_cutout, gbuffers_terrain_solid, gbuffers_terrain_cutout and gbuffers_terrain_cutout_mip are not used")])]),e._v(" "),r("p",[e._v("Todo：")]),e._v(" "),r("ul",[r("li",[e._v("Separate programs for world border, entities (by id, by type), cape, elytra, wolf collar, etc.")])]),e._v(" "),r("h2",{attrs:{id:"属性-attributes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性-attributes"}},[e._v("#")]),e._v(" 属性|Attributes")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Value")]),e._v(" "),r("th",[e._v("Comment")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("attribute vec3 mc_Entity;")]),e._v(" "),r("td",[e._v("xy = blockId, renderType")]),e._v(" "),r("td",[e._v('"blockId" is used only for blocks specified in "block.properties"')])]),e._v(" "),r("tr",[r("td",[e._v("attribute vec2 mc_midTexCoord;")]),e._v(" "),r("td",[e._v("st = midTexU, midTexV")]),e._v(" "),r("td",[e._v("Sprite middle UV coordinates")])]),e._v(" "),r("tr",[r("td",[e._v("attribute vec4 at_tangent;")]),e._v(" "),r("td",[e._v("xyz = tangent vector, w = handedness")]),e._v(" "),r("td")])])]),e._v(" "),r("h2",{attrs:{id:"全局变量-uniforms"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#全局变量-uniforms"}},[e._v("#")]),e._v(" 全局变量|Uniforms")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Value")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("uniform int heldItemId;")]),e._v(" "),r("td",[e._v('held item ID (main hand), used only for items defined in "item.properties"')])]),e._v(" "),r("tr",[r("td",[e._v("uniform int heldBlockLightValue;")]),e._v(" "),r("td",[e._v("held item light value (main hand)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int heldItemId2;")]),e._v(" "),r("td",[e._v('held item ID (off hand), used only for items defined in "item.properties"')])]),e._v(" "),r("tr",[r("td",[e._v("uniform int heldBlockLightValue2;")]),e._v(" "),r("td",[e._v("held item light value (off hand)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int fogMode;")]),e._v(" "),r("td",[e._v("GL_LINEAR, GL_EXP or GL_EXP2")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float fogDensity;")]),e._v(" "),r("td",[e._v("0.0-1.0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 fogColor;")]),e._v(" "),r("td",[e._v("r, g, b")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 skyColor;")]),e._v(" "),r("td",[e._v("r, g, b")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int worldTime;")]),e._v(" "),r("td",[e._v("<ticks> = worldTicks % 24000")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int worldDay;")]),e._v(" "),r("td",[e._v("<days> = worldTicks / 24000")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int moonPhase;")]),e._v(" "),r("td",[e._v("0-7")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int frameCounter;")]),e._v(" "),r("td",[e._v("Frame index (0 to 720719, then resets to 0)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float frameTime;")]),e._v(" "),r("td",[e._v("last frame time, seconds")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float frameTimeCounter;")]),e._v(" "),r("td",[e._v("run time, seconds (resets to 0 after 3600s)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float sunAngle;")]),e._v(" "),r("td",[e._v("0.0-1.0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float shadowAngle;")]),e._v(" "),r("td",[e._v("0.0-1.0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float rainStrength;")]),e._v(" "),r("td",[e._v("0.0-1.0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float aspectRatio;")]),e._v(" "),r("td",[e._v("viewWidth / viewHeight")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float viewWidth;")]),e._v(" "),r("td",[e._v("viewWidth")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float viewHeight;")]),e._v(" "),r("td",[e._v("viewHeight")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float near;")]),e._v(" "),r("td",[e._v("near viewing plane distance")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float far;")]),e._v(" "),r("td",[e._v("far viewing plane distance")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 sunPosition;")]),e._v(" "),r("td",[e._v("sun position in eye space")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 moonPosition;")]),e._v(" "),r("td",[e._v("moon position in eye space")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 shadowLightPosition;")]),e._v(" "),r("td",[e._v("shadow light (sun or moon) position in eye space")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 upPosition;")]),e._v(" "),r("td",[e._v("direction up")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 cameraPosition;")]),e._v(" "),r("td",[e._v("camera position in world space")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec3 previousCameraPosition;")]),e._v(" "),r("td",[e._v("last frame cameraPosition")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 gbufferModelView;")]),e._v(" "),r("td",[e._v("modelview matrix after setting up the camera transformations")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 gbufferModelViewInverse;")]),e._v(" "),r("td",[e._v("inverse gbufferModelView")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 gbufferPreviousModelView;")]),e._v(" "),r("td",[e._v("last frame gbufferModelView")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 gbufferProjection;")]),e._v(" "),r("td",[e._v("projection matrix when the gbuffers were generated")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 gbufferProjectionInverse;")]),e._v(" "),r("td",[e._v("inverse gbufferProjection")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 gbufferPreviousProjection;")]),e._v(" "),r("td",[e._v("last frame gbufferProjection")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 shadowProjection;")]),e._v(" "),r("td",[e._v("projection matrix when the shadow map was generated")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 shadowProjectionInverse;")]),e._v(" "),r("td",[e._v("inverse shadowProjection")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 shadowModelView;")]),e._v(" "),r("td",[e._v("modelview matrix when the shadow map was generated")])]),e._v(" "),r("tr",[r("td",[e._v("uniform mat4 shadowModelViewInverse;")]),e._v(" "),r("td",[e._v("inverse shadowModelView")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float wetness;")]),e._v(" "),r("td",[e._v("rainStrength smoothed with wetnessHalfLife or drynessHalfLife")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float eyeAltitude;")]),e._v(" "),r("td",[e._v("view entity Y position")])]),e._v(" "),r("tr",[r("td",[e._v("uniform ivec2 eyeBrightness;")]),e._v(" "),r("td",[e._v("x = block brightness, y = sky brightness, light 0-15 = brightness 0-240")])]),e._v(" "),r("tr",[r("td",[e._v("uniform ivec2 eyeBrightnessSmooth;")]),e._v(" "),r("td",[e._v("eyeBrightness smoothed with eyeBrightnessHalflife")])]),e._v(" "),r("tr",[r("td",[e._v("uniform ivec2 terrainTextureSize;")]),e._v(" "),r("td",[e._v("not used")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int terrainIconSize;")]),e._v(" "),r("td",[e._v("not used")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int isEyeInWater;")]),e._v(" "),r("td",[e._v("1 = camera is in water, 2 = camera is in lava")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float nightVision;")]),e._v(" "),r("td",[e._v("night vision (0.0-1.0)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float blindness;")]),e._v(" "),r("td",[e._v("blindness (0.0-1.0)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float screenBrightness;")]),e._v(" "),r("td",[e._v("screen brightness (0.0-1.0)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int hideGUI;")]),e._v(" "),r("td",[e._v("GUI is hidden")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float centerDepthSmooth;")]),e._v(" "),r("td",[e._v("centerDepth smoothed with centerDepthSmoothHalflife")])]),e._v(" "),r("tr",[r("td",[e._v("uniform ivec2 atlasSize;")]),e._v(" "),r("td",[e._v("texture atlas size (only set when the atlas texture is bound)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform vec4 entityColor;")]),e._v(" "),r("td",[e._v("entity color multiplier (entity hurt, creeper flashing when exploding)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int entityId;")]),e._v(" "),r("td",[e._v("entity ID")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int blockEntityId;")]),e._v(" "),r("td",[e._v('block entity ID (block ID for the tile entity, only for blocks specified in "block.properties")')])]),e._v(" "),r("tr",[r("td",[e._v("uniform ivec4 blendFunc;")]),e._v(" "),r("td",[e._v("blend function (srcRGB, dstRGB, srcAlpha, dstAlpha)")])]),e._v(" "),r("tr",[r("td",[e._v("uniform int instanceId;")]),e._v(" "),r("td",[e._v("instance ID when instancing is enabled (countInstances > 1), 0 = original, 1-N = copies")])]),e._v(" "),r("tr",[r("td",[e._v("uniform float playerMood;")]),e._v(" "),r("td",[e._v("player mood (0.0-1.0), increases the longer a player stays underground")])])])]),e._v(" "),r("h2",{attrs:{id:"gbuffers-uniforms"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gbuffers-uniforms"}},[e._v("#")]),e._v(" GBuffers Uniforms")]),e._v(" "),r("blockquote",[r("p",[e._v("Programs: basic, textured, textured_lit, skybasic, skytextured, clouds, terrain, terrain_solid, terrain_cutout_mip, terrain_cutout, damagedblock, water, block, beaconbeam, item, entities, armor_glint, spidereyes, hand, hand_water, weather)")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Value")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("uniform sampler2D texture;")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D lightmap;")]),e._v(" "),r("td",[e._v("1")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D normals;")]),e._v(" "),r("td",[e._v("2")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D specular;")]),e._v(" "),r("td",[e._v("3")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadow;")]),e._v(" "),r("td",[e._v("waterShadowEnabled ? 5 : 4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D watershadow;")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowtex0;")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowtex1;")]),e._v(" "),r("td",[e._v("5")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D depthtex0;")]),e._v(" "),r("td",[e._v("6")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux1;")]),e._v(" "),r("td",[e._v("7  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux2;")]),e._v(" "),r("td",[e._v("8  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux3;")]),e._v(" "),r("td",[e._v("9  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux4;")]),e._v(" "),r("td",[e._v("10  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex4;")]),e._v(" "),r("td",[e._v("7  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex5;")]),e._v(" "),r("td",[e._v("8  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex6;")]),e._v(" "),r("td",[e._v("9  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex7;")]),e._v(" "),r("td",[e._v("10  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex8;")]),e._v(" "),r("td",[e._v("16  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex9;")]),e._v(" "),r("td",[e._v("17  <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexA;")]),e._v(" "),r("td",[e._v("18 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexB;")]),e._v(" "),r("td",[e._v("19 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexC;")]),e._v(" "),r("td",[e._v("20 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexD;")]),e._v(" "),r("td",[e._v("21 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexE;")]),e._v(" "),r("td",[e._v("22 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexF;")]),e._v(" "),r("td",[e._v("23 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D depthtex1;")]),e._v(" "),r("td",[e._v("11")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor;")]),e._v(" "),r("td",[e._v("13")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor0;")]),e._v(" "),r("td",[e._v("13")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor1;")]),e._v(" "),r("td",[e._v("14")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D noisetex;")]),e._v(" "),r("td",[e._v("15")])])])]),e._v(" "),r("h2",{attrs:{id:"shadow-uniforms"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shadow-uniforms"}},[e._v("#")]),e._v(" Shadow Uniforms")]),e._v(" "),r("blockquote",[r("p",[e._v("Programs: shadow, shadow_solid, shadow_cutout")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Value")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("uniform sampler2D tex;")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D texture;")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D lightmap;")]),e._v(" "),r("td",[e._v("1")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D normals;")]),e._v(" "),r("td",[e._v("2")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D specular;")]),e._v(" "),r("td",[e._v("3")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadow;")]),e._v(" "),r("td",[e._v("waterShadowEnabled ? 5 : 4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D watershadow;")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowtex0;")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowtex1;")]),e._v(" "),r("td",[e._v("5")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux1;")]),e._v(" "),r("td",[e._v("7  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux2;")]),e._v(" "),r("td",[e._v("8  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux3;")]),e._v(" "),r("td",[e._v("9  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux4;")]),e._v(" "),r("td",[e._v("10  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex4;")]),e._v(" "),r("td",[e._v("7  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex5;")]),e._v(" "),r("td",[e._v("8  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex6;")]),e._v(" "),r("td",[e._v("9  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex7;")]),e._v(" "),r("td",[e._v("10  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex8;")]),e._v(" "),r("td",[e._v("16  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex9;")]),e._v(" "),r("td",[e._v("17  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexA;")]),e._v(" "),r("td",[e._v("18  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexB;")]),e._v(" "),r("td",[e._v("19  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexC;")]),e._v(" "),r("td",[e._v("20  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexD;")]),e._v(" "),r("td",[e._v("21  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexE;")]),e._v(" "),r("td",[e._v("22  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexF;")]),e._v(" "),r("td",[e._v("23  <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor;")]),e._v(" "),r("td",[e._v("13")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor0;")]),e._v(" "),r("td",[e._v("13")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor1;")]),e._v(" "),r("td",[e._v("14")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D noisetex;")]),e._v(" "),r("td",[e._v("15")])])])]),e._v(" "),r("h2",{attrs:{id:"composite-and-deferred-uniforms"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#composite-and-deferred-uniforms"}},[e._v("#")]),e._v(" Composite and Deferred Uniforms")]),e._v(" "),r("blockquote",[r("p",[e._v("Programs: composite, composite1, composite2, composite3, composite4, composite5, composite6, composite7, final, deferred, deferred1, deferred2, deferred3, deferred4, deferred5, deferred6, deferred7")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Value")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("uniform sampler2D gcolor;")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gdepth;")]),e._v(" "),r("td",[e._v("1")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gnormal;")]),e._v(" "),r("td",[e._v("2")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D composite;")]),e._v(" "),r("td",[e._v("3")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux1;")]),e._v(" "),r("td",[e._v("7")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux2;")]),e._v(" "),r("td",[e._v("8")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux3;")]),e._v(" "),r("td",[e._v("9")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gaux4;")]),e._v(" "),r("td",[e._v("10")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex0;")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex1;")]),e._v(" "),r("td",[e._v("1")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex2;")]),e._v(" "),r("td",[e._v("2")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex3;")]),e._v(" "),r("td",[e._v("3")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex4;")]),e._v(" "),r("td",[e._v("7")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex5;")]),e._v(" "),r("td",[e._v("8")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex6;")]),e._v(" "),r("td",[e._v("9")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex7;")]),e._v(" "),r("td",[e._v("10")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex8;")]),e._v(" "),r("td",[e._v("16")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortex9;")]),e._v(" "),r("td",[e._v("17")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexA;")]),e._v(" "),r("td",[e._v("18")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexB;")]),e._v(" "),r("td",[e._v("19")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexC;")]),e._v(" "),r("td",[e._v("20")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexD;")]),e._v(" "),r("td",[e._v("21")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexE;")]),e._v(" "),r("td",[e._v("22")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D colortexF;")]),e._v(" "),r("td",[e._v("23")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadow;")]),e._v(" "),r("td",[e._v("waterShadowEnabled ? 5 : 4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D watershadow;")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowtex0;")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowtex1;")]),e._v(" "),r("td",[e._v("5")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D gdepthtex;")]),e._v(" "),r("td",[e._v("6")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D depthtex0;")]),e._v(" "),r("td",[e._v("6")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D depthtex1;")]),e._v(" "),r("td",[e._v("11")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D depthtex2;")]),e._v(" "),r("td",[e._v("12")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor;")]),e._v(" "),r("td",[e._v("13")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor0;")]),e._v(" "),r("td",[e._v("13")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D shadowcolor1;")]),e._v(" "),r("td",[e._v("14")])]),e._v(" "),r("tr",[r("td",[e._v("uniform sampler2D noisetex;")]),e._v(" "),r("td",[e._v("15")])])])]),e._v(" "),r("h2",{attrs:{id:"gbuffers-textures"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gbuffers-textures"}},[e._v("#")]),e._v(" GBuffers Textures")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Id")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Legacy name")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("0")]),e._v(" "),r("td",[e._v("texture")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("lightmap")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("2")]),e._v(" "),r("td",[e._v("normals")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("3")]),e._v(" "),r("td",[e._v("specular")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("shadowtex0")]),e._v(" "),r("td",[e._v("shadow, watershadow")])]),e._v(" "),r("tr",[r("td",[e._v("5")]),e._v(" "),r("td",[e._v("shadowtex1")]),e._v(" "),r("td",[e._v("shadow (when watershadow used)")])]),e._v(" "),r("tr",[r("td",[e._v("6")]),e._v(" "),r("td",[e._v("depthtex0")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("7")]),e._v(" "),r("td",[e._v("gaux1")]),e._v(" "),r("td",[e._v("colortex4 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("gaux2")]),e._v(" "),r("td",[e._v("colortex5 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("9")]),e._v(" "),r("td",[e._v("gaux3")]),e._v(" "),r("td",[e._v("colortex6 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("10")]),e._v(" "),r("td",[e._v("gaux4")]),e._v(" "),r("td",[e._v("colortex7 <custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("12")]),e._v(" "),r("td",[e._v("depthtex1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("13")]),e._v(" "),r("td",[e._v("shadowcolor0")]),e._v(" "),r("td",[e._v("shadowcolor")])]),e._v(" "),r("tr",[r("td",[e._v("14")]),e._v(" "),r("td",[e._v("shadowcolor1")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("15")]),e._v(" "),r("td",[e._v("noisetex")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("16")]),e._v(" "),r("td",[e._v("colortex8")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("17")]),e._v(" "),r("td",[e._v("colortex9")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("18")]),e._v(" "),r("td",[e._v("colortexA")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("19")]),e._v(" "),r("td",[e._v("colortexB")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("20")]),e._v(" "),r("td",[e._v("colortexC")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("21")]),e._v(" "),r("td",[e._v("colortexD")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("22")]),e._v(" "),r("td",[e._v("colortexE")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])]),e._v(" "),r("tr",[r("td",[e._v("23")]),e._v(" "),r("td",[e._v("colortexF")]),e._v(" "),r("td",[e._v("<custom texture or output from deferred programs>")])])])]),e._v(" "),r("h2",{attrs:{id:"shadow-textures"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shadow-textures"}},[e._v("#")]),e._v(" Shadow Textures")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Id")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Legacy name")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("0")]),e._v(" "),r("td",[e._v("texture")]),e._v(" "),r("td",[e._v("tex")])]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("lightmap")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("2")]),e._v(" "),r("td",[e._v("normals")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("3")]),e._v(" "),r("td",[e._v("specular")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("shadowtex0")]),e._v(" "),r("td",[e._v("shadow, watershadow")])]),e._v(" "),r("tr",[r("td",[e._v("5")]),e._v(" "),r("td",[e._v("shadowtex0")]),e._v(" "),r("td",[e._v("shadow (when watershadow used)")])]),e._v(" "),r("tr",[r("td",[e._v("7")]),e._v(" "),r("td",[e._v("gaux1")]),e._v(" "),r("td",[e._v("colortex4 <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("gaux2")]),e._v(" "),r("td",[e._v("colortex5 <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("9")]),e._v(" "),r("td",[e._v("gaux3")]),e._v(" "),r("td",[e._v("colortex6 <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("10")]),e._v(" "),r("td",[e._v("gaux4")]),e._v(" "),r("td",[e._v("colortex7 <custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("13")]),e._v(" "),r("td",[e._v("shadowcolor0")]),e._v(" "),r("td",[e._v("shadowcolor")])]),e._v(" "),r("tr",[r("td",[e._v("14")]),e._v(" "),r("td",[e._v("shadowcolor1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("15")]),e._v(" "),r("td",[e._v("noisetex")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("16")]),e._v(" "),r("td",[e._v("colortex8")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("17")]),e._v(" "),r("td",[e._v("colortex9")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("18")]),e._v(" "),r("td",[e._v("colortexA")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("19")]),e._v(" "),r("td",[e._v("colortexB")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("20")]),e._v(" "),r("td",[e._v("colortexC")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("21")]),e._v(" "),r("td",[e._v("colortexD")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("22")]),e._v(" "),r("td",[e._v("colortexE")]),e._v(" "),r("td",[e._v("<custom texture>")])]),e._v(" "),r("tr",[r("td",[e._v("23")]),e._v(" "),r("td",[e._v("colortexF")]),e._v(" "),r("td",[e._v("<custom texture>")])])])]),e._v(" "),r("h2",{attrs:{id:"composite-and-deferred-textures"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#composite-and-deferred-textures"}},[e._v("#")]),e._v(" Composite and Deferred Textures")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Id")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Legacy name")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("0")]),e._v(" "),r("td",[e._v("colortex0")]),e._v(" "),r("td",[e._v("gcolor")])]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("colortex1")]),e._v(" "),r("td",[e._v("gdepth")])]),e._v(" "),r("tr",[r("td",[e._v("2")]),e._v(" "),r("td",[e._v("colortex2")]),e._v(" "),r("td",[e._v("gnormal")])]),e._v(" "),r("tr",[r("td",[e._v("3")]),e._v(" "),r("td",[e._v("colortex3")]),e._v(" "),r("td",[e._v("composite")])]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("shadowtex0")]),e._v(" "),r("td",[e._v("shadow, watershadow")])]),e._v(" "),r("tr",[r("td",[e._v("5")]),e._v(" "),r("td",[e._v("shadowtex1")]),e._v(" "),r("td",[e._v("shadow (when watershadow used)")])]),e._v(" "),r("tr",[r("td",[e._v("6")]),e._v(" "),r("td",[e._v("depthtex0")]),e._v(" "),r("td",[e._v("gdepthtex")])]),e._v(" "),r("tr",[r("td",[e._v("7")]),e._v(" "),r("td",[e._v("colortex4")]),e._v(" "),r("td",[e._v("gaux1")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("colortex5")]),e._v(" "),r("td",[e._v("gaux2")])]),e._v(" "),r("tr",[r("td",[e._v("9")]),e._v(" "),r("td",[e._v("colortex6")]),e._v(" "),r("td",[e._v("gaux3")])]),e._v(" "),r("tr",[r("td",[e._v("10")]),e._v(" "),r("td",[e._v("colortex7")]),e._v(" "),r("td",[e._v("gaux4")])]),e._v(" "),r("tr",[r("td",[e._v("11")]),e._v(" "),r("td",[e._v("depthtex1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("12")]),e._v(" "),r("td",[e._v("depthtex2")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("13")]),e._v(" "),r("td",[e._v("shadowcolor0")]),e._v(" "),r("td",[e._v("shadowcolor")])]),e._v(" "),r("tr",[r("td",[e._v("14")]),e._v(" "),r("td",[e._v("shadowcolor1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("15")]),e._v(" "),r("td",[e._v("noisetex")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("16")]),e._v(" "),r("td",[e._v("colortex8")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("17")]),e._v(" "),r("td",[e._v("colortex9")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("18")]),e._v(" "),r("td",[e._v("colortexA")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("19")]),e._v(" "),r("td",[e._v("colortexB")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("20")]),e._v(" "),r("td",[e._v("colortexC")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("21")]),e._v(" "),r("td",[e._v("colortexD")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("22")]),e._v(" "),r("td",[e._v("colortexE")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("23")]),e._v(" "),r("td",[e._v("colortexF")]),e._v(" "),r("td")])])]),e._v(" "),r("h2",{attrs:{id:"depth-buffers-usage"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#depth-buffers-usage"}},[e._v("#")]),e._v(" Depth buffers usage")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Usage")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("depthtex0")]),e._v(" "),r("td",[e._v("everything")])]),e._v(" "),r("tr",[r("td",[e._v("depthtex1")]),e._v(" "),r("td",[e._v("no translucent objects (water, stained glass)")])]),e._v(" "),r("tr",[r("td",[e._v("depthtex2")]),e._v(" "),r("td",[e._v("no translucent objects (water, stained glass), no handheld objects")])])])]),e._v(" "),r("h2",{attrs:{id:"shadow-buffers-usage"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shadow-buffers-usage"}},[e._v("#")]),e._v(" Shadow buffers usage")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Usage")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("shadowtex0")]),e._v(" "),r("td",[e._v("everything")])]),e._v(" "),r("tr",[r("td",[e._v("shadowtex1")]),e._v(" "),r("td",[e._v("no translucent objects (water, stained glass)")])])])]),e._v(" "),r("h2",{attrs:{id:"vertex-shader-configuration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vertex-shader-configuration"}},[e._v("#")]),e._v(" Vertex Shader Configuration")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Effect")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("attribute <type> mc_Entity;")]),e._v(" "),r("td",[e._v("useEntityAttrib = true")])]),e._v(" "),r("tr",[r("td",[e._v("attribute <type> mc_midTexCoord;")]),e._v(" "),r("td",[e._v("useMidTexCoordAttrib = true")])]),e._v(" "),r("tr",[r("td",[e._v("attribute <type> at_tangent;")]),e._v(" "),r("td",[e._v("useTangentAttrib = true")])]),e._v(" "),r("tr",[r("td",[e._v("const int countInstances = 1;")]),e._v(" "),r("td",[e._v('when "countInstances > 1" the geometry will be rendered several times, see uniform "instanceId"')])])])]),e._v(" "),r("h2",{attrs:{id:"geometry-shader-configuration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#geometry-shader-configuration"}},[e._v("#")]),e._v(" Geometry Shader Configuration")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Effect")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("#extension GL_ARB_geometry_shader4 : enable")]),e._v(" "),r("td",[e._v("Enable GL_ARB_geometry_shader4")])]),e._v(" "),r("tr",[r("td",[e._v("const int maxVerticesOut = 3;")]),e._v(" "),r("td",[e._v("Set GEOMETRY_VERTICES_OUT_ARB for GL_ARB_geometry_shader4")])])])]),e._v(" "),r("h2",{attrs:{id:"fragment-shader-configuration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fragment-shader-configuration"}},[e._v("#")]),e._v(" Fragment Shader Configuration")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Source")]),e._v(" "),r("th",[e._v("Effect")]),e._v(" "),r("th",[e._v("Comment")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("uniform <type> shadow;")]),e._v(" "),r("td",[e._v("shadowDepthBuffers = 1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> watershadow;")]),e._v(" "),r("td",[e._v("shadowDepthBuffers = 2")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> shadowtex0;")]),e._v(" "),r("td",[e._v("shadowDepthBuffers = 1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> shadowtex1;")]),e._v(" "),r("td",[e._v("shadowDepthBuffers = 2")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> shadowcolor;")]),e._v(" "),r("td",[e._v("shadowColorBuffers = 1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> shadowcolor0;")]),e._v(" "),r("td",[e._v("shadowColorBuffers = 1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> shadowcolor1;")]),e._v(" "),r("td",[e._v("shadowColorBuffers = 2")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> depthtex0;")]),e._v(" "),r("td",[e._v("depthBuffers = 1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> depthtex1;")]),e._v(" "),r("td",[e._v("depthBuffers = 2")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> depthtex2;")]),e._v(" "),r("td",[e._v("depthBuffers = 3")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> gdepth;")]),e._v(" "),r("td",[e._v("if (bufferFormat[1] == RGBA) bufferFormat[1] = RGBA32F;")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> gaux1;")]),e._v(" "),r("td",[e._v("colorBuffers = 5")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> gaux2;")]),e._v(" "),r("td",[e._v("colorBuffers = 6")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> gaux3;")]),e._v(" "),r("td",[e._v("colorBuffers = 7")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> gaux4;")]),e._v(" "),r("td",[e._v("colorBuffers = 8")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> colortex4;")]),e._v(" "),r("td",[e._v("colorBuffers = 5")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> colortex5;")]),e._v(" "),r("td",[e._v("colorBuffers = 6")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> colortex6;")]),e._v(" "),r("td",[e._v("colorBuffers = 7")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("uniform <type> colortex7;")]),e._v(" "),r("td",[e._v("colorBuffers = 8")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* SHADOWRES:1024 */")]),e._v(" "),r("td",[e._v("shadowMapWidth = shadowMapHeight = 1024")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const int shadowMapResolution  = 1024;")]),e._v(" "),r("td",[e._v("shadowMapWidth = shadowMapHeight = 1024")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* SHADOWFOV:90.0 */")]),e._v(" "),r("td",[e._v("shadowMapFov = 90")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float shadowMapFov =  90.0;")]),e._v(" "),r("td",[e._v("shadowMapFov = 90")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* SHADOWHPL:160.0 */")]),e._v(" "),r("td",[e._v("shadowMapDistance = 160.0")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float shadowDistance =  160.0f;")]),e._v(" "),r("td",[e._v("shadowMapDistance = 160.0")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float  shadowDistanceRenderMul = -1f;")]),e._v(" "),r("td",[e._v("shadowDistanceRenderMul = -1")]),e._v(" "),r("td",[e._v("When > 0  enable shadow optimization (shadowRenderDistance = shadowDistance *  shadowDistanceRenderMul)")])]),e._v(" "),r("tr",[r("td",[e._v("const float shadowIntervalSize  = 2.0f;")]),e._v(" "),r("td",[e._v("shadowIntervalSize = 2.0")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  generateShadowMipmap = true;")]),e._v(" "),r("td",[e._v("shadowMipmap = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  generateShadowColorMipmap = true;")]),e._v(" "),r("td",[e._v("shadowColorMipmap = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadowHardwareFiltering = true;")]),e._v(" "),r("td",[e._v("shadowHardwareFiltering = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadowHardwareFiltering0 = true;")]),e._v(" "),r("td",[e._v("shadowHardwareFiltering[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadowHardwareFiltering1 = true;")]),e._v(" "),r("td",[e._v("shadowHardwareFiltering[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowtexMipmap =  true;")]),e._v(" "),r("td",[e._v("shadowMipmap[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowtex0Mipmap =  true;")]),e._v(" "),r("td",[e._v("shadowMipmap[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowtex1Mipmap =  true;")]),e._v(" "),r("td",[e._v("shadowMipmap[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowcolor0Mipmap  = true;")]),e._v(" "),r("td",[e._v("shadowColorMipmap[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowColor0Mipmap  = true;")]),e._v(" "),r("td",[e._v("shadowColorMipmap[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowcolor1Mipmap  = true;")]),e._v(" "),r("td",[e._v("shadowColorMipmap[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowColor1Mipmap  = true;")]),e._v(" "),r("td",[e._v("shadowColorMipmap[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowtexNearest =  true;")]),e._v(" "),r("td",[e._v("shadowFilterNearest[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowtex0Nearest =  true;")]),e._v(" "),r("td",[e._v("shadowFilterNearest[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadow0MinMagNearest = true;")]),e._v(" "),r("td",[e._v("shadowFilterNearest[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowtex1Nearest =  true;")]),e._v(" "),r("td",[e._v("shadowFilterNearest[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadow1MinMagNearest = true;")]),e._v(" "),r("td",[e._v("shadowFilterNearest[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowcolor0Nearest  = true;")]),e._v(" "),r("td",[e._v("shadowColorFilterNearest[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowColor0Nearest  = true;")]),e._v(" "),r("td",[e._v("shadowColorFilterNearest[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadowColor0MinMagNearest = true;")]),e._v(" "),r("td",[e._v("shadowColorFilterNearest[0] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowcolor1Nearest  = true;")]),e._v(" "),r("td",[e._v("shadowColorFilterNearest[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool shadowColor1Nearest  = true;")]),e._v(" "),r("td",[e._v("shadowColorFilterNearest[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const bool  shadowColor1MinMagNearest = true;")]),e._v(" "),r("td",[e._v("shadowColorFilterNearest[1] = true")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* WETNESSHL:600.0 */")]),e._v(" "),r("td",[e._v("wetnessHalfLife = 600 (ticks)")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float wetnessHalflife =  600.0f;")]),e._v(" "),r("td",[e._v("wetnessHalfLife = 600 (ticks)")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* DRYNESSHL:200.0 */")]),e._v(" "),r("td",[e._v("drynessHalfLife = 200 (ticks)")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float drynessHalflife =  200.0f;")]),e._v(" "),r("td",[e._v("drynessHalfLife = 200 (ticks)")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float  eyeBrightnessHalflife = 10.0f;")]),e._v(" "),r("td",[e._v("eyeBrightnessHalflife = 10 (ticks)")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float  centerDepthHalflife = 1.0f;")]),e._v(" "),r("td",[e._v("centerDepthSmoothHalflife = 1 (ticks)")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float sunPathRotation =  0f;")]),e._v(" "),r("td",[e._v("sunPathRotation = 0f")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const float  ambientOcclusionLevel = 1.0f;")]),e._v(" "),r("td",[e._v("ambientOcclusionLevel = 1.0f")]),e._v(" "),r("td",[e._v("0.0f = AO  disabled, 1.0f = vanilla AO")])]),e._v(" "),r("tr",[r("td",[e._v("const int superSamplingLevel =  1;")]),e._v(" "),r("td",[e._v("superSamplingLevel = 1")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const int  noiseTextureResolution = 256;")]),e._v(" "),r("td",[e._v("noiseTextureResolution = 256")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* GAUX4FORMAT:RGBA32F */")]),e._v(" "),r("td",[e._v("buffersFormat[7] = GL_RGBA32F")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* GAUX4FORMAT:RGB32F */")]),e._v(" "),r("td",[e._v("buffersFormat[7] = GL_RGB32F")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("/* GAUX4FORMAT:RGB16 */")]),e._v(" "),r("td",[e._v("buffersFormat[7] = GL_RGB16")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("const int  <bufferIndex>Format = <format>;")]),e._v(" "),r("td",[e._v("bufferFormats[index] = <format>")]),e._v(" "),r("td",[e._v('See "Draw  Buffer Index" and "Texture Formats"')])]),e._v(" "),r("tr",[r("td",[e._v("const bool  <bufferIndex>Clear = false;")]),e._v(" "),r("td",[e._v("gbuffersClear[index] = false")]),e._v(" "),r("td",[e._v('Skip glClear()  for the given buffer, only for "composite" and "deferred"  programs')])]),e._v(" "),r("tr",[r("td",[e._v("const vec4  <bufferIndex>ClearColor = vec4();")]),e._v(" "),r("td",[e._v("gbuffersClearColor[index] = vec4(r, g, b, a)")]),e._v(" "),r("td",[e._v('Clear color for the given  buffer, only for "composite" and "deferred" programs')])]),e._v(" "),r("tr",[r("td",[e._v("const bool  <bufferIndex>MipmapEnabled = true;")]),e._v(" "),r("td",[e._v("bufferMipmaps[index] = true")]),e._v(" "),r("td",[e._v('Only for  programs "composite" , "deferred" and "final"')])]),e._v(" "),r("tr",[r("td",[e._v("const int  <shadowBufferIx>Format = <format>;")]),e._v(" "),r("td",[e._v("shadowBufferFormats[index] = <format>")]),e._v(" "),r("td",[e._v('See "Shadow Buffer  Index" and "Texture Formats"')])]),e._v(" "),r("tr",[r("td",[e._v("const bool  <shadowBufferIx>Clear = false;")]),e._v(" "),r("td",[e._v("shadowBuffersClear[index] = false")]),e._v(" "),r("td",[e._v("Skip glClear() for  the given shadow color buffer")])]),e._v(" "),r("tr",[r("td",[e._v("const vec4  <shadowBufferIx>ClearColor = vec4();")]),e._v(" "),r("td",[e._v("shadowBuffersClearColor[index] = vec4(r, g, b, a)")]),e._v(" "),r("td",[e._v("Clear color for the given shadow  color buffer")])]),e._v(" "),r("tr",[r("td",[e._v("/* DRAWBUFFERS:02BF */")]),e._v(" "),r("td",[e._v('drawBuffers = "02BF"')]),e._v(" "),r("td",[e._v("Draw  buffers 0, 2, B and F")])])])]),e._v(" "),r("h2",{attrs:{id:"draw-buffer-index"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#draw-buffer-index"}},[e._v("#")]),e._v(" Draw Buffer Index")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Prefix")]),e._v(" "),r("th",[e._v("Index")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("colortex<0-F>")]),e._v(" "),r("td",[e._v("0-F")])]),e._v(" "),r("tr",[r("td",[e._v("gcolor")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("gdepth")]),e._v(" "),r("td",[e._v("1")])]),e._v(" "),r("tr",[r("td",[e._v("gnormal")]),e._v(" "),r("td",[e._v("2")])]),e._v(" "),r("tr",[r("td",[e._v("composite")]),e._v(" "),r("td",[e._v("3")])]),e._v(" "),r("tr",[r("td",[e._v("gaux1")]),e._v(" "),r("td",[e._v("4")])]),e._v(" "),r("tr",[r("td",[e._v("gaux2")]),e._v(" "),r("td",[e._v("5")])]),e._v(" "),r("tr",[r("td",[e._v("gaux3")]),e._v(" "),r("td",[e._v("6")])]),e._v(" "),r("tr",[r("td",[e._v("gaux4")]),e._v(" "),r("td",[e._v("7")])])])]),e._v(" "),r("h2",{attrs:{id:"shadow-buffer-index"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#shadow-buffer-index"}},[e._v("#")]),e._v(" Shadow Buffer Index")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Prefix")]),e._v(" "),r("th",[e._v("Index")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("shadowcolor")]),e._v(" "),r("td",[e._v("0")])]),e._v(" "),r("tr",[r("td",[e._v("shadowcolor<0-1>")]),e._v(" "),r("td",[e._v("0-1")])])])]),e._v(" "),r("h2",{attrs:{id:"texture-formats"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#texture-formats"}},[e._v("#")]),e._v(" Texture Formats")]),e._v(" "),r("p",[r("strong",[e._v("1. 8-bit normalized")])]),e._v(" "),r("blockquote",[r("p",[e._v("R8")]),e._v(" "),r("p",[e._v("RG8")]),e._v(" "),r("p",[e._v("RGB8")]),e._v(" "),r("p",[e._v("RGBA8")])]),e._v(" "),r("p",[r("strong",[e._v("2. 8-bit signed normalized")])]),e._v(" "),r("blockquote",[r("p",[e._v("R8_SNORM")]),e._v(" "),r("p",[e._v("RG8_SNORM")]),e._v(" "),r("p",[e._v("RGB8_SNORM")]),e._v(" "),r("p",[e._v("RGBA8_SNORM")])]),e._v(" "),r("p",[r("strong",[e._v("3. 16-bit normalized")])]),e._v(" "),r("blockquote",[r("p",[e._v("R16")]),e._v(" "),r("p",[e._v("RG16")]),e._v(" "),r("p",[e._v("RGB16")]),e._v(" "),r("p",[e._v("RGBA16")])]),e._v(" "),r("p",[r("strong",[e._v("4. 16-bit signed normalized")])]),e._v(" "),r("blockquote",[r("p",[e._v("R16_SNORM")]),e._v(" "),r("p",[e._v("RG16_SNORM")]),e._v(" "),r("p",[e._v("RGB16_SNORM")]),e._v(" "),r("p",[e._v("RGBA16_SNORM")])]),e._v(" "),r("p",[r("strong",[e._v("5. 16-bit float")])]),e._v(" "),r("blockquote",[r("p",[e._v("R16F")]),e._v(" "),r("p",[e._v("RG16F")]),e._v(" "),r("p",[e._v("RGB16F")]),e._v(" "),r("p",[e._v("RGBA16F")])]),e._v(" "),r("p",[r("strong",[e._v("6. 32-bit float")])]),e._v(" "),r("blockquote",[r("p",[e._v("R32F")]),e._v(" "),r("p",[e._v("RG32F")]),e._v(" "),r("p",[e._v("RGB32F")]),e._v(" "),r("p",[e._v("RGBA32F")])]),e._v(" "),r("p",[r("strong",[e._v("7. 32-bit integer")])]),e._v(" "),r("blockquote",[r("p",[e._v("R32I")]),e._v(" "),r("p",[e._v("RG32I")]),e._v(" "),r("p",[e._v("RGB32I")]),e._v(" "),r("p",[e._v("RGBA32I")])]),e._v(" "),r("p",[r("strong",[e._v("8. 32-bit unsigned integer")])]),e._v(" "),r("blockquote",[r("p",[e._v("R32UI")]),e._v(" "),r("p",[e._v("RG32UI")]),e._v(" "),r("p",[e._v("RGB32UI")]),e._v(" "),r("p",[e._v("RGBA32UI")])]),e._v(" "),r("p",[r("strong",[e._v("9. Mixed")])]),e._v(" "),r("blockquote",[r("p",[e._v("R3_G3_B2")]),e._v(" "),r("p",[e._v("RGB5_A1")]),e._v(" "),r("p",[e._v("RGB10_A2")]),e._v(" "),r("p",[e._v("R11F_G11F_B10F")]),e._v(" "),r("p",[e._v("RGB9_E5")])]),e._v(" "),r("h2",{attrs:{id:"pixel-formats"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pixel-formats"}},[e._v("#")]),e._v(" Pixel Formats")]),e._v(" "),r("p",[r("strong",[e._v("1. Normalized")])]),e._v(" "),r("blockquote",[r("p",[e._v("RED")]),e._v(" "),r("p",[e._v("RG")]),e._v(" "),r("p",[e._v("RGB")]),e._v(" "),r("p",[e._v("BGR")]),e._v(" "),r("p",[e._v("RGBA")]),e._v(" "),r("p",[e._v("BGRA")])]),e._v(" "),r("p",[r("strong",[e._v("2. Integer")])]),e._v(" "),r("blockquote",[r("p",[e._v("RED_INTEGER")]),e._v(" "),r("p",[e._v("RG_INTEGER")]),e._v(" "),r("p",[e._v("RGB_INTEGER")]),e._v(" "),r("p",[e._v("BGR_INTEGER")]),e._v(" "),r("p",[e._v("RGBA_INTEGER")]),e._v(" "),r("p",[e._v("BGRA_INTEGER")])]),e._v(" "),r("h2",{attrs:{id:"pixel-types"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pixel-types"}},[e._v("#")]),e._v(" Pixel Types")]),e._v(" "),r("blockquote",[r("p",[e._v("BYTE")]),e._v(" "),r("p",[e._v("SHORT")]),e._v(" "),r("p",[e._v("INT")]),e._v(" "),r("p",[e._v("HALF_FLOAT")]),e._v(" "),r("p",[e._v("FLOAT")]),e._v(" "),r("p",[e._v("UNSIGNED_BYTE")]),e._v(" "),r("p",[e._v("UNSIGNED_BYTE_3_3_2")]),e._v(" "),r("p",[e._v("UNSIGNED_BYTE_2_3_3_REV")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT_5_6_5")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT_5_6_5_REV")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT_4_4_4_4")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT_4_4_4_4_REV")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT_5_5_5_1")]),e._v(" "),r("p",[e._v("UNSIGNED_SHORT_1_5_5_5_REV")]),e._v(" "),r("p",[e._v("UNSIGNED_INT")]),e._v(" "),r("p",[e._v("UNSIGNED_INT_8_8_8_8")]),e._v(" "),r("p",[e._v("UNSIGNED_INT_8_8_8_8_REV")]),e._v(" "),r("p",[e._v("UNSIGNED_INT_10_10_10_2")]),e._v(" "),r("p",[e._v("UNSIGNED_INT_2_10_10_10_REV")])]),e._v(" "),r("h2",{attrs:{id:"block-id-mapping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#block-id-mapping"}},[e._v("#")]),e._v(" Block ID mapping")]),e._v(" "),r("p",[e._v('The block ID mapping is defined in "shaders/block.properties" included in the shader pack.')]),e._v(" "),r("p",[e._v('Forge mods may add custom block mapping as "assets/<modid>/shaders/block.properties" in the mod JAR file.')]),e._v(" "),r("p",[e._v('The "block.properties" file can use conditional preprocessor directives (#ifdef, #if, etc.)')]),e._v(" "),r("p",[e._v('For more details see section "Standard Macros" A to G. Option macros are not available.')]),e._v(" "),r("p",[e._v('Format "block.<id>=<block1> <block2> ..."')]),e._v(" "),r("p",[e._v("The key is the substitute block ID, the values are the blocks which are to be replaced.")]),e._v(" "),r("p",[e._v("Only one line per block ID is allowed.")]),e._v(" "),r("p",[e._v('See "properties_files.txt" for the block matching rules.')]),e._v(" "),r("div",{staticClass:"language-properties extra-class"},[r("pre",{pre:!0,attrs:{class:"language-properties"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Short format")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("block.31")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("red_flower yellow_flower reeds")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Long format")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("block.32")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("minecraft:red_flower ic2:nether_flower botania:reeds")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Properties")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("block.33")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("minecraft:red_flower:type=white_tulip minecraft:red_flower:type=pink_tulip botania:reeds:type=green")]),e._v("\n")])])]),r("p",[e._v('See "properties.files" for more details.')]),e._v(" "),r("h2",{attrs:{id:"block-render-layers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#block-render-layers"}},[e._v("#")]),e._v(" Block render layers")]),e._v(" "),r("p",[e._v('The custom block render layers are defined in "shaders/block.properties" included in the shader pack.')]),e._v(" "),r("div",{staticClass:"language-properties extra-class"},[r("pre",{pre:!0,attrs:{class:"language-properties"}},[r("code",[r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("layer.solid")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("<blocks>")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("layer.cutout")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("<blocks>")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("layer.cutout_mipped")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("<blocks>")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("layer.translucent")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("<blocks>")]),e._v("\n")])])]),r("p",[e._v("Layers")]),e._v(" "),r("blockquote",[r("p",[e._v("solid - no alpha, no blending (solid textures)")]),e._v(" "),r("p",[e._v("cutout - alpha, no blending (cutout textures)")]),e._v(" "),r("p",[e._v("cutout_mipped - alpha, no blending, mipmaps (cutout with mipmaps)")]),e._v(" "),r("p",[e._v("translucent - alpha, blending, mipmaps (water, stained glass)")])]),e._v(" "),r("p",[e._v("Blocks which are solid opaque cubes (stone, dirt, ores, etc) can't be rendered on a custom layer as this would affect face culling, ambient occlusion, light propagation and so on.")]),e._v(" "),r("p",[e._v("For exaple:")]),e._v(" "),r("div",{staticClass:"language-properties extra-class"},[r("pre",{pre:!0,attrs:{class:"language-properties"}},[r("code",[r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("layer.translucent")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("glass_pane fence wooden_door")]),e._v("\n")])])]),r("h2",{attrs:{id:"item-id-mapping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#item-id-mapping"}},[e._v("#")]),e._v(" Item ID mapping")]),e._v(" "),r("p",[e._v('The item ID mapping is defined in "shaders/item.properties" included in the shader pack.')]),e._v(" "),r("p",[e._v('Forge mods may add custom item mapping as "assets/<modid>/shaders/item.properties" in the mod JAR file.')]),e._v(" "),r("p",[e._v('The "item.properties" file can use conditional preprocessor directives (#ifdef, #if, etc.)')]),e._v(" "),r("p",[e._v('For more details see section "Standard Macros" A to G. Option macros are not available.')]),e._v(" "),r("p",[e._v('Format "item.<id>=<item1> <item2> ..."')]),e._v(" "),r("p",[e._v("The key is the substitute item ID, the values are the items which are to be replaced.")]),e._v(" "),r("p",[e._v("Only one line per item ID is allowed.")]),e._v(" "),r("div",{staticClass:"language-properties extra-class"},[r("pre",{pre:!0,attrs:{class:"language-properties"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Short format")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("item.5000")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("diamond_sword dirt")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Long format")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("item.5001")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("minecraft:diamond_sword botania:reeds")]),e._v("\n")])])]),r("h2",{attrs:{id:"entity-id-mapping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#entity-id-mapping"}},[e._v("#")]),e._v(" Entity ID mapping")]),e._v(" "),r("p",[e._v('The entity ID mapping is defined in "shaders/entity.properties" included in the shader pack.')]),e._v(" "),r("p",[e._v('Forge mods may add custom entity mapping as "assets/<modid>/shaders/entity.properties" in the mod JAR file.')]),e._v(" "),r("p",[e._v('The "entity.properties" file can use conditional preprocessor directives (#ifdef, #if, etc.)')]),e._v(" "),r("p",[e._v('For more details see section "Standard Macros" A to G. Option macros are not available.')]),e._v(" "),r("p",[e._v('Format "entity.<id>=<entity1> <entity2> ..."')]),e._v(" "),r("p",[e._v("The key is the substitute entity ID, the values are the entities which are to be replaced.")]),e._v(" "),r("p",[e._v("Only one line per entity ID is allowed.")]),e._v(" "),r("div",{staticClass:"language-properties extra-class"},[r("pre",{pre:!0,attrs:{class:"language-properties"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Short format")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("entity.2000")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("sheep cow")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Long format")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("entity.2001")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),r("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("minecraft:pig botania:pixie")]),e._v("\n")])])]),r("h2",{attrs:{id:"standard-macros"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#standard-macros"}},[e._v("#")]),e._v(" Standard Macros")]),e._v(" "),r("p",[e._v('The standard macros are automatically included after the "#version" declaration in every shader file')]),e._v(" "),r("p",[r("strong",[e._v("A. Minecraft version")])]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_VERSION")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n")])])]),r("p",[e._v("The value is in format 122 (major 1, minor 2, release 2)")]),e._v(" "),r("p",[e._v("For example: 1.9.4 -> 10904, 1.11.2 -> 11102, etc.")]),e._v(" "),r("p",[r("strong",[e._v("B. Maximum supported GL version")])]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_VERSION")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n")])])]),r("p",[e._v("The value is integer, for example: 210, 320, 450")]),e._v(" "),r("p",[r("strong",[e._v("C. Maximum supported GLSL version")])]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GLSL_VERSION")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")])])]),e._v("\n")])])]),r("p",[e._v("The value is integer, for example: 120, 150, 450")]),e._v(" "),r("p",[r("strong",[e._v("D. Operating system")])]),e._v(" "),r("p",[e._v("One of the following:")]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_OS_WINDOWS")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_OS_MAC")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_OS_LINUX")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_OS_OTHER")])]),e._v("\n")])])]),r("p",[r("strong",[e._v("E. GPU")])]),e._v(" "),r("p",[e._v("One of the following:")]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_VENDOR_ATI")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_VENDOR_INTEL")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_VENDOR_NVIDIA")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_VENDOR_XORG")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_VENDOR_OTHER")])]),e._v("\n")])])]),r("p",[r("strong",[e._v("F. Driver")])]),e._v(" "),r("p",[e._v("One of the following:")]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_RADEON")]),e._v(" ")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_GEFORCE")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_QUADRO")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_INTEL")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_GALLIUM")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_MESA")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_GL_RENDERER_OTHER")])]),e._v("\n")])])]),r("p",[r("strong",[e._v("G. OpenGL extensions")])]),e._v(" "),r("p",[e._v('Macros for the supported OpenGL extensions are named like the corresponding extension with a prefix "MC_".')]),e._v(" "),r("p",[e._v('For example the macro "MC_GL_ARB_shader_texture_lod" is defined when the extension "GL_ARB_shader_texture_lod" is supported.')]),e._v(" "),r("p",[e._v("Only the macros which are referenced and supported are added to the shader file.")]),e._v(" "),r("p",[r("strong",[e._v("H. Options")])]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_FXAA_LEVEL")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("       ")]),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// When FXAA is enabled, values: 2, 4")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_NORMAL_MAP")]),e._v("               "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// When the normal map is enabled")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_SPECULAR_MAP")]),e._v("             "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// When the specular map is enabled")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_RENDER_QUALITY")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("   ")]),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Values: 0.5, 0.70710677, 1.0, 1.4142135, 2.0")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_SHADOW_QUALITY")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("   ")]),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Values: 0.5, 0.70710677, 1.0, 1.4142135, 2.0")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_HAND_DEPTH")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token expression"}},[r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("value"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("       ")]),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Values: 0.0625, 0.125, 0.25")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_OLD_HAND_LIGHT")]),e._v("           "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// When Old Hand Light is enabled")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_OLD_LIGHTING")]),e._v("             "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// When Old Lighting is enabled")])]),e._v("\n")])])]),r("p",[r("strong",[e._v("I. Textures")])]),e._v(" "),r("div",{staticClass:"language-glsl extra-class"},[r("pre",{pre:!0,attrs:{class:"language-glsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_TEXTURE_FORMAT_LAB_PBR")]),e._v("       "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Texture format LabPBR (https://github.com/rre36/lab-pbr/wiki)")])]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token macro property"}},[r("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),r("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("MC_TEXTURE_FORMAT_LAB_PBR_1_3")]),e._v("   "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Version 1.3")])]),e._v("\n")])])]),r("p",[e._v('(see "texture.properties")')]),e._v(" "),r("h2",{attrs:{id:"references"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://daxnitro.wikia.com/wiki/Editing_Shaders_%28Shaders2%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://daxnitro.wikia.com/wiki/Editing_Shaders_%28Shaders2%29"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-mods/1286604-shaders-mod-updated-by-karyonix",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-mods/1286604-shaders-mod-updated-by-karyonix"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.minecraftforum.net/forums/search?by-author=karyonix&display-type=posts",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.minecraftforum.net/forums/search?by-author=karyonix&display-type=posts"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.seas.upenn.edu/~cis565/fbo.htm#feedback",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.seas.upenn.edu/~cis565/fbo.htm#feedback"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"附原文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#附原文"}},[e._v("#")]),e._v(" 附原文")]),e._v(" "),r("p",[e._v("https://github.com/sp614x/optifine/blob/master/OptiFineDoc/doc/shaders.txt")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('Overview\n========\nThe Shaders Mod makes use of a deferred rendering pipeline.\nThe gbuffer shaders come first in the pipeline. They render data to textures that will be sent to the composite shaders. \nOptional composite shaders can be added after the shadow map (shadowcomp), before terrain (prepare) and before water rendering (deferred).\nThe composite shaders then render to textures that will be sent to the final shader. \nThe final shader renders directly to the screen.\n\nShader Files\n============\nAll shader files are placed in the folder "shaders" of the shader pack.\nThe shader source files use the name of the program in which they are to be used with extension depending on their type.\n\nExtension  Type                 \n==========================\n.csh       Compute shader\n.vsh       Vertex shader     \n.gsh       Geometry shader   \n.fsh       Fragment shader   \n\nGeometry shaders need either OpenGL 3.2 with layout qualifiers or the extension GL_ARB_geometry_shader4 (GL_EXT_geometry_shader4) \nwith configuration "maxVerticesOut".\n\nColor Attachments\n=================\nThe data is passed from shader to shader using color attachments. \nThere are at least 4 for all machines. For machines that can support it, there are up to 16.\nMacOS is limited to 8 color attachments, even with modern GPUs.\nIn the deferred, composite and final shaders, these are referenced by the gcolor, gdepth, gnormal, composite, gaux1, gaux2, gaux3 and gaux4 uniforms.\n(colortex0 to colortex15 can be used instead of gcolor, gdepth etc.)\nDespite the naming, all of these color attachments are the same and can be used for any purpose with the exception of the first two. \nThe first one, gcolor has its color cleared to the current fog color before rendering. \nThe second one, gdepth has its color cleared to solid white before rendering and uses a higher precision storage buffer suitable for storing depth values. \nThe rest have their color cleared to black with 0 alpha.\n\nEach color attachment uses 2 buffers (A and B) with logical names "main" and "alt", which can be used as ping-pong buffers.\nWhen the buffers are flipped the mapping between main/alt and A/B is reversed.\nGbuffer programs always read from "main" (only gaux1-4) and write to "main" buffers (they shouldn\'t read and write to the same buffer at the same time).\nDeferred/composite programs always read from "main" and write to "alt" buffers. \nAfter a deferred/composite program is rendered the buffers that it writes to are flipped so the next programs can see the current output as input.\nThe property "flip.<program>.<buffer>=<true|false>" can be used to enable or disable the flip independant of the buffer write.\nThe virtual programs "deferred_pre" and "composite_pre" can be used for buffer flipping before the deferred/composite pass.\n\nOutput color attachments are configured with the "/* DRAWBUFFERS:XYZ */" or "/* RENDERTARGETS: X,Y,Z */" comment, placed in the fragment shader.\nGbuffers, deferred and composite programs can write to any color attachment, but no more than 8 at the same time.\nIf the output color attachments are not configured, then the program will write to the first 8 color attachments.  \n\nWhen writing to the color attachments in the composite shader, blending is disabled. \nWriting to color attachments that the composite shader also reads from will generate artifacts (unless you just copy the original contents) \n\nThe shaders configuration parsing is affected by the preprocessor conditional compilation directives.\nThe following preprocessor directives are currently recognized:\n  #define <macro>\n  #undef <macro>\n  #ifdef <macro>\n  #ifndef <macro>\n  #if <int>\n  #if defined <macro>\n  #if !defined <macro>\n  #elif <int>\n  #elif defined <macro> \n  #elif !defined <macro>\n  #else\n  #endif\n\nThe current shaderpack can be reloaded by pressing "F3+R" or using the command "/reloadShaders". \n\nCompute Shaders\n===============\nA list of compute shaders can be attached to every program except gbuffers programs.\nThey are named like the program with optional suffix, for example "composite.csh", "composite_a.csh" ... "composite_z.csh".\nCompute shaders run before the program and can read from all buffers using texture samplers.\nThey can read and write to colortex0-5 and shadowcolor0-1 buffers as images using the aliases colorimg0-5 and shadowcolorimg0-1, \nfor example "layout (rgba8) uniform image2D colorimg0;"\nCompute shaders need at least "#version 430" and local size definition, for example: "layout (local_size_x = 16, local_size_y = 16) in;".\nWork groups are defined either fixed via "const ivec3 workGroups = ivec3(50, 30, 1);" or relative to render size \nvia "const vec2 workGroupsRender = vec2(0.5f, 0.5f);".\nThe default configuration is "const vec2 workGroupsRender = vec2(1.0f, 1.0f);", which executes the compute shader once per pixel.\n\nImage access\n============\nAll programs can read and write to colorimg0-5 and shadowcolorimg0-1 using imageLoad() and imageStore().\n\nShader Programs\n===============\nName                         Render                                When not defined use\n========================================================================================\n<none>                       gui, menus                            <none>\n--- Shadow map ---\nshadow                       everything in shadow pass             <none>  \nshadow_solid                 <not used>                            shadow\nshadow_cutout                <not used>                            shadow\n--- Shadow composite ---\nshadowcomp                   <shadowcomp>                          <none>\nshadowcomp1                  <shadowcomp>                          <none>\n...\nshadowcomp15                 <shadowcomp>                          <none>\n--- Prepare ---\nprepare                      <prepare>                             <none>\nprepare1                     <prepare>                             <none>\n...\nprepare15                    <prepare>                             <none>\n--- GBuffers ---\ngbuffers_basic               leash, block selection box            <none>\ngbuffers_line                block outline, fishing line           gbuffers_basic\ngbuffers_textured            particles                             gbuffers_basic\ngbuffers_textured_lit        lit_particles, world border           gbuffers_textured\ngbuffers_skybasic            sky, horizon, stars, void             gbuffers_basic\ngbuffers_skytextured         sun, moon                             gbuffers_textured\ngbuffers_clouds              clouds                                gbuffers_textured\ngbuffers_terrain             solid, cutout, cutout_mip             gbuffers_textured_lit\ngbuffers_terrain_solid       <not used>                            gbuffers_terrain\ngbuffers_terrain_cutout_mip  <not used>                            gbuffers_terrain\ngbuffers_terrain_cutout      <not used>                            gbuffers_terrain\ngbuffers_damagedblock        damaged_blocks                        gbuffers_terrain\ngbuffers_block               block_entities                        gbuffers_terrain\ngbuffers_beaconbeam          beacon beam                           gbuffers_textured\ngbuffers_item                <not used>                            gbuffers_textured_lit\ngbuffers_entities            entities                              gbuffers_textured_lit\ngbuffers_entities_glowing    glowing entities, spectral effect     gbuffers_entities\ngbuffers_armor_glint         glint on armor and handheld items     gbuffers_textured\ngbuffers_spidereyes          eyes of spider, enderman and dragon   gbuffers_textured\ngbuffers_hand                hand and opaque handheld objects      gbuffers_textured_lit\ngbuffers_weather             rain, snow                            gbuffers_textured_lit\n--- Deferred ---\ndeferred_pre                 <virtual> flip ping-pong buffers      <none>\ndeferred                     <deferred>                            <none>\ndeferred1                    <deferred>                            <none>\n...\ndeferred15                   <deferred>                            <none>\n--- GBuffers translucent ---\ngbuffers_water               translucent                           gbuffers_terrain\ngbuffers_hand_water          translucent handheld objects          gbuffers_hand\n--- Composite ---\ncomposite_pre                <virtual> flip ping-pong buffers      <none>\ncomposite                    <composite>                           <none>\ncomposite1                   <composite>                           <none>\n...\ncomposite15                  <composite>                           <none>\n--- Final ---\nfinal                        <final>                               <none>\n\nRemarks:\n - The programs shadow_solid, shadow_cutout, gbuffers_terrain_solid, gbuffers_terrain_cutout and gbuffers_terrain_cutout_mip are not used\n\nTodo:\n - Separate programs for world border, entities (by id, by type), cape, elytra, wolf collar, etc. \n \nAttributes\n==========\nSource                                          Value                                       Comment\n======================================================================================================================================================================\nin vec3 vaPosition;                             position (x, y, z)                          1.17+, for terrain it is relative to the chunk origin, see "chunkOffset"\nin vec4 vaColor;                                color (r, g, b, a)                          1.17+\nin vec2 vaUV0;                                  texture (u, v)                              1.17+\nin ivec2 vaUV1;                                 overlay (u, v)                              1.17+\nin ivec2 vaUV2;                                 lightmap (u, v)                             1.17+\nin vec3 vaNormal;                               normal (x, y, z)                            1.17+\nin vec3 mc_Entity;                              xy = blockId, renderType                    "blockId" is used only for blocks specified in "block.properties"      \nin vec2 mc_midTexCoord;                         st = midTexU, midTexV                       Sprite middle UV coordinates                \nin vec4 at_tangent;                             xyz = tangent vector, w = handedness\nin vec3 at_velocity;                            vertex offset to previous frame             In view space, only for entities and block entities\nin vec3 at_midBlock;                            offset to block center in 1/64m units       Only for blocks\n\nUniforms\n==========\nSource                                          Value                                                    \n=====================================================================================================================================================================\nuniform int heldItemId;                         held item ID (main hand), used only for items defined in "item.properties"\nuniform int heldBlockLightValue;                held item light value (main hand)\nuniform int heldItemId2;                        held item ID (off hand), used only for items defined in "item.properties"\nuniform int heldBlockLightValue2;               held item light value (off hand)\nuniform int fogMode;                            GL_LINEAR, GL_EXP or GL_EXP2\nuniform float fogDensity;                       0.0-1.0\nuniform vec3 fogColor;                          r, g, b\nuniform vec3 skyColor;                          r, g, b\nuniform int worldTime;                          <ticks> = worldTicks % 24000\nuniform int worldDay;                           <days> = worldTicks / 24000\nuniform int moonPhase;                          0-7\nuniform int frameCounter;                       Frame index (0 to 720719, then resets to 0)\nuniform float frameTime;                        last frame time, seconds\nuniform float frameTimeCounter;                 run time, seconds (resets to 0 after 3600s)\nuniform float sunAngle;                         0.0-1.0\nuniform float shadowAngle;                      0.0-1.0\nuniform float rainStrength;                     0.0-1.0\nuniform float aspectRatio;                      viewWidth / viewHeight\nuniform float viewWidth;                        viewWidth\nuniform float viewHeight;                       viewHeight\nuniform float near;                             near viewing plane distance\nuniform float far;                              far viewing plane distance\nuniform vec3 sunPosition;                       sun position in eye space\nuniform vec3 moonPosition;                      moon position in eye space\nuniform vec3 shadowLightPosition;               shadow light (sun or moon) position in eye space\nuniform vec3 upPosition;                        direction up\nuniform vec3 cameraPosition;                    camera position in world space\nuniform vec3 previousCameraPosition;            last frame cameraPosition\nuniform mat4 gbufferModelView;                  modelview matrix after setting up the camera transformations\nuniform mat4 gbufferModelViewInverse;           inverse gbufferModelView\nuniform mat4 gbufferPreviousModelView;          last frame gbufferModelView\nuniform mat4 gbufferProjection;                 projection matrix when the gbuffers were generated\nuniform mat4 gbufferProjectionInverse;          inverse gbufferProjection\nuniform mat4 gbufferPreviousProjection;         last frame gbufferProjection\nuniform mat4 shadowProjection;                  projection matrix when the shadow map was generated\nuniform mat4 shadowProjectionInverse;           inverse shadowProjection\nuniform mat4 shadowModelView;                   modelview matrix when the shadow map was generated\nuniform mat4 shadowModelViewInverse;            inverse shadowModelView\nuniform float wetness;                          rainStrength smoothed with wetnessHalfLife or drynessHalfLife\nuniform float eyeAltitude;                      view entity Y position\nuniform ivec2 eyeBrightness;                    x = block brightness, y = sky brightness, light 0-15 = brightness 0-240 \nuniform ivec2 eyeBrightnessSmooth;              eyeBrightness smoothed with eyeBrightnessHalflife\nuniform ivec2 terrainTextureSize;               not used\nuniform int terrainIconSize;                    not used\nuniform int isEyeInWater;                       1 = camera is in water, 2 = camera is in lava, 3 = camera is in powder snow\nuniform float nightVision;                      night vision (0.0-1.0)\nuniform float blindness;                        blindness (0.0-1.0)\nuniform float screenBrightness;                 screen brightness (0.0-1.0)\nuniform int hideGUI;                            GUI is hidden\nuniform float centerDepthSmooth;                centerDepth smoothed with centerDepthSmoothHalflife\nuniform ivec2 atlasSize;                        texture atlas size (only set when the atlas texture is bound)\nuniform vec4 spriteBounds;                      sprite bounds in the texture atlas (u0, v0, u1, v1), set when MC_ANISOTROPIC_FILTERING is enabled\nuniform vec4 entityColor;                       entity color multiplier (entity hurt, creeper flashing when exploding)\nuniform int entityId;                           entity ID\nuniform int blockEntityId;                      block entity ID (block ID for the tile entity, only for blocks specified in "block.properties")\nuniform ivec4 blendFunc;                        blend function (srcRGB, dstRGB, srcAlpha, dstAlpha)\nuniform int instanceId;                         instance ID when instancing is enabled (countInstances > 1), 0 = original, 1-N = copies\nuniform float playerMood;                       player mood (0.0-1.0), increases the longer a player stays underground\nuniform int renderStage;                        render stage, see "Standard Macros", "J. Render stages"\n// 1.17+\nuniform mat4 modelViewMatrix;                   model view matrix\nuniform mat4 modelViewMatrixInverse;            inverse model view matrix\nuniform mat4 projectionMatrix;                  projection matrix\nuniform mat4 projectionMatrixInverse;           inverse projection matrix\nuniform mat4 textureMatrix = mat4(1.0);         texture matrix, default is identity\nuniform mat3 normalMatrix;                      normal matrix\nuniform vec3 chunkOffset;                       terrain chunk origin, used with attribute "vaPosition"\nuniform float alphaTestRef;                     alpha test reference value, the check is "if (color.a < alphaTestRef) discard;" \n\nConstants\n=====================================================================================================================================================================\n// Lightmap texture matrix, 1.17+\nconst mat4 TEXTURE_MATRIX_2 = mat4(vec4(0.00390625, 0.0, 0.0, 0.0), vec4(0.0, 0.00390625, 0.0, 0.0), vec4(0.0, 0.0, 0.00390625, 0.0), vec4(0.03125, 0.03125, 0.03125, 1.0));\n\nGBuffers Uniforms\n================= \nPrograms: basic, textured, textured_lit, skybasic, skytextured, clouds, terrain, terrain_solid, terrain_cutout_mip, terrain_cutout, damagedblock, water, block, beaconbeam, item, entities, armor_glint, spidereyes, hand, hand_water, weather)\n==================\nSource                                          Value                                                    \n=====================================================================================================================================================================\nuniform sampler2D texture;                      0\nuniform sampler2D lightmap;                     1\nuniform sampler2D normals;                      2         \nuniform sampler2D specular;                     3\nuniform sampler2D shadow;                       waterShadowEnabled ? 5 : 4\nuniform sampler2D watershadow;                  4\nuniform sampler2D shadowtex0;                   4\nuniform sampler2D shadowtex1;                   5\nuniform sampler2D depthtex0;                    6\nuniform sampler2D gaux1;                        7  <custom texture or output from deferred programs>\nuniform sampler2D gaux2;                        8  <custom texture or output from deferred programs>\nuniform sampler2D gaux3;                        9  <custom texture or output from deferred programs>\nuniform sampler2D gaux4;                        10 <custom texture or output from deferred programs>\nuniform sampler2D colortex4;                    7  <custom texture or output from deferred programs>\nuniform sampler2D colortex5;                    8  <custom texture or output from deferred programs>\nuniform sampler2D colortex6;                    9  <custom texture or output from deferred programs>\nuniform sampler2D colortex7;                    10 <custom texture or output from deferred programs>\nuniform sampler2D colortex8;                    16 <custom texture or output from deferred programs>\nuniform sampler2D colortex9;                    17 <custom texture or output from deferred programs>\nuniform sampler2D colortex10;                   18 <custom texture or output from deferred programs>\nuniform sampler2D colortex11;                   19 <custom texture or output from deferred programs>\nuniform sampler2D colortex12;                   20 <custom texture or output from deferred programs>\nuniform sampler2D colortex13;                   21 <custom texture or output from deferred programs>\nuniform sampler2D colortex14;                   22 <custom texture or output from deferred programs>\nuniform sampler2D colortex15;                   23 <custom texture or output from deferred programs>\nuniform sampler2D depthtex1;                    11\nuniform sampler2D shadowcolor;                  13\nuniform sampler2D shadowcolor0;                 13\nuniform sampler2D shadowcolor1;                 14\nuniform sampler2D noisetex;                     15\n\nShadow Uniforms\n==================\nPrograms: shadow, shadow_solid, shadow_cutout \n==================\nSource                                          Value                                                    \n=====================================================================================================================================================================\nuniform sampler2D tex;                          0\nuniform sampler2D texture;                      0\nuniform sampler2D lightmap;                     1\nuniform sampler2D normals;                      2         \nuniform sampler2D specular;                     3\nuniform sampler2D shadow;                       waterShadowEnabled ? 5 : 4\nuniform sampler2D watershadow;                  4\nuniform sampler2D shadowtex0;                   4\nuniform sampler2D shadowtex1;                   5\nuniform sampler2D gaux1;                        7  <custom texture>\nuniform sampler2D gaux2;                        8  <custom texture>\nuniform sampler2D gaux3;                        9  <custom texture>\nuniform sampler2D gaux4;                        10 <custom texture>\nuniform sampler2D colortex4;                    7  <custom texture>\nuniform sampler2D colortex5;                    8  <custom texture>\nuniform sampler2D colortex6;                    9  <custom texture>\nuniform sampler2D colortex7;                    10 <custom texture>\nuniform sampler2D colortex8;                    16 <custom texture>\nuniform sampler2D colortex9;                    17 <custom texture>\nuniform sampler2D colortex10;                   18 <custom texture>\nuniform sampler2D colortex11;                   19 <custom texture>\nuniform sampler2D colortex12;                   20 <custom texture>\nuniform sampler2D colortex13;                   21 <custom texture>\nuniform sampler2D colortex14;                   22 <custom texture>\nuniform sampler2D colortex15;                   23 <custom texture>\nuniform sampler2D shadowcolor;                  13\nuniform sampler2D shadowcolor0;                 13\nuniform sampler2D shadowcolor1;                 14\nuniform sampler2D noisetex;                     15\n\nComposite and Deferred Uniforms\n===============================\nPrograms: composite, composite1, composite2, composite3, composite4, composite5, composite6, composite7, final, deferred, deferred1, deferred2, deferred3, deferred4, deferred5, deferred6, deferred7\n===============================\nSource                                          Value                                                    \n=====================================================================================================================================================================\nuniform sampler2D gcolor;                       0\nuniform sampler2D gdepth;                       1\nuniform sampler2D gnormal;                      2\nuniform sampler2D composite;                    3\nuniform sampler2D gaux1;                        7\nuniform sampler2D gaux2;                        8\nuniform sampler2D gaux3;                        9\nuniform sampler2D gaux4;                        10\nuniform sampler2D colortex0;                    0\nuniform sampler2D colortex1;                    1\nuniform sampler2D colortex2;                    2\nuniform sampler2D colortex3;                    3\nuniform sampler2D colortex4;                    7\nuniform sampler2D colortex5;                    8\nuniform sampler2D colortex6;                    9\nuniform sampler2D colortex7;                    10\nuniform sampler2D colortex8;                    16 \nuniform sampler2D colortex9;                    17 \nuniform sampler2D colortex10;                   18 \nuniform sampler2D colortex11;                   19 \nuniform sampler2D colortex12;                   20 \nuniform sampler2D colortex13;                   21 \nuniform sampler2D colortex14;                   22 \nuniform sampler2D colortex15;                   23 \nuniform sampler2D shadow;                       waterShadowEnabled ? 5 : 4\nuniform sampler2D watershadow;                  4\nuniform sampler2D shadowtex0;                   4\nuniform sampler2D shadowtex1;                   5\nuniform sampler2D gdepthtex;                    6\nuniform sampler2D depthtex0;                    6\nuniform sampler2D depthtex1;                    11\nuniform sampler2D depthtex2;                    12\nuniform sampler2D shadowcolor;                  13\nuniform sampler2D shadowcolor0;                 13\nuniform sampler2D shadowcolor1;                 14\nuniform sampler2D noisetex;                     15\n\nGBuffers Textures\n=================\nId Name           Legacy name\n======================================\n0  texture\n1  lightmap\n2  normals\n3  specular\n4  shadowtex0     shadow, watershadow \n5  shadowtex1     shadow (when watershadow used)\n6  depthtex0\n7  gaux1          colortex4 <custom texture or output from deferred programs>\n8  gaux2          colortex5 <custom texture or output from deferred programs>\n9  gaux3          colortex6 <custom texture or output from deferred programs>\n10 gaux4          colortex7 <custom texture or output from deferred programs>\n12 depthtex1\n13 shadowcolor0   shadowcolor \n14 shadowcolor1\n15 noisetex\n16 colortex8      <custom texture or output from deferred programs>\n17 colortex9      <custom texture or output from deferred programs>\n18 colortex10     <custom texture or output from deferred programs>\n19 colortex11     <custom texture or output from deferred programs>\n20 colortex12     <custom texture or output from deferred programs>\n21 colortex13     <custom texture or output from deferred programs>\n22 colortex14     <custom texture or output from deferred programs>\n23 colortex15     <custom texture or output from deferred programs>\n\nShadow Textures\n==================\nId Name           Legacy name\n======================================\n0  texture        tex\n1  lightmap\n2  normals\n3  specular\n4  shadowtex0     shadow, watershadow        \n5  shadowtex1     shadow (when watershadow used)\n7  gaux1          colortex4 <custom texture>\n8  gaux2          colortex5 <custom texture>\n9  gaux3          colortex6 <custom texture>\n10 gaux4          colortex7 <custom texture>\n13 shadowcolor0   shadowcolor\n14 shadowcolor1   \n15 noisetex\n16 colortex8      <custom texture>\n17 colortex9      <custom texture>\n18 colortex10     <custom texture>\n19 colortex11     <custom texture>\n20 colortex12     <custom texture>\n21 colortex13     <custom texture>\n22 colortex14     <custom texture>\n23 colortex15     <custom texture>\n\nComposite and Deferred Textures\n===============================\nId Name           Legacy name\n======================================\n0  colortex0      gcolor \n1  colortex1      gdepth \n2  colortex2      gnormal \n3  colortex3      composite\n4  shadowtex0     shadow, watershadow \n5  shadowtex1     shadow (when watershadow used)\n6  depthtex0      gdepthtex\n7  colortex4      gaux1\n8  colortex5      gaux2\n9  colortex6      gaux3\n10 colortex7      gaux4\n11 depthtex1\n12 depthtex2\n13 shadowcolor0   shadowcolor\n14 shadowcolor1\n15 noisetex\n16 colortex8\n17 colortex9\n18 colortex10\n19 colortex11\n20 colortex12\n21 colortex13\n22 colortex14\n23 colortex15\n\nDepth buffers usage\n===================\nName        Usage\n==============================================================================\ndepthtex0   everything\ndepthtex1   no translucent objects (water, stained glass) \ndepthtex2   no translucent objects (water, stained glass), no handheld objects\n\nShadow buffers usage\n====================\nName        Usage\n==============================================================================\nshadowtex0  everything\nshadowtex1  no translucent objects (water, stained glass) \n\nVertex Shader Configuration\n===========================\nSource                                          Effect                                                    Comment\n=====================================================================================================================================================================\nin vec3 mc_Entity;                              useEntityAttrib = true\nin vec2 mc_midTexCoord;                         useMidTexCoordAttrib = true             \nin vec4 at_tangent;                             useTangentAttrib = true\nconst int countInstances = 1;                   when "countInstances > 1" the geometry will be rendered several times, see uniform "instanceId"\n\nGeometry Shader Configuration\n===========================\nSource                                          Effect                                                    Comment\n=====================================================================================================================================================================\n#extension GL_ARB_geometry_shader4 : enable     Enable GL_ARB_geometry_shader4\nconst int maxVerticesOut = 3;                   Set GEOMETRY_VERTICES_OUT_ARB for GL_ARB_geometry_shader4 \n\nFragment Shader Configuration\n=============================\nSource                                          Effect                                                     Comment\n=====================================================================================================================================================================\nuniform <type> shadow;                          shadowDepthBuffers = 1\nuniform <type> watershadow;                     shadowDepthBuffers = 2\nuniform <type> shadowtex0;                      shadowDepthBuffers = 1\nuniform <type> shadowtex1;                      shadowDepthBuffers = 2\nuniform <type> shadowcolor;                     shadowColorBuffers = 1\nuniform <type> shadowcolor0;                    shadowColorBuffers = 1\nuniform <type> shadowcolor1;                    shadowColorBuffers = 2\nuniform <type> depthtex0;                       depthBuffers = 1\nuniform <type> depthtex1;                       depthBuffers = 2\nuniform <type> depthtex2;                       depthBuffers = 3\nuniform <type> gdepth;                          if (bufferFormat[1] == RGBA) bufferFormat[1] = RGBA32F;\nuniform <type> gaux1;                           colorBuffers = 5\nuniform <type> gaux2;                           colorBuffers = 6\nuniform <type> gaux3;                           colorBuffers = 7\nuniform <type> gaux4;                           colorBuffers = 8\nuniform <type> colortex4;                       colorBuffers = 5\nuniform <type> colortex5;                       colorBuffers = 6\nuniform <type> colortex6;                       colorBuffers = 7\nuniform <type> colortex7;                       colorBuffers = 8\nuniform <type> centerDepthSmooth;               centerDepthSmooth = true\n/* SHADOWRES:1024 */                            shadowMapWidth = shadowMapHeight = 1024\nconst int shadowMapResolution = 1024;           shadowMapWidth = shadowMapHeight = 1024\n/* SHADOWFOV:90.0 */                            shadowMapFov = 90\nconst float shadowMapFov = 90.0;                shadowMapFov = 90\n/* SHADOWHPL:160.0 */                           shadowMapDistance = 160.0\nconst float shadowDistance = 160.0f;            shadowMapDistance = 160.0\nconst float shadowDistanceRenderMul = -1f;      shadowDistanceRenderMul = -1                               When > 0 enable shadow optimization (shadowRenderDistance = shadowDistance * shadowDistanceRenderMul)\nconst float shadowIntervalSize = 2.0f;          shadowIntervalSize = 2.0\nconst bool generateShadowMipmap = true;         shadowMipmap = true\nconst bool generateShadowColorMipmap = true;    shadowColorMipmap = true\nconst bool shadowHardwareFiltering = true;      shadowHardwareFiltering = true\nconst bool shadowHardwareFiltering0 = true;     shadowHardwareFiltering[0] = true\nconst bool shadowHardwareFiltering1 = true;     shadowHardwareFiltering[1] = true\nconst bool shadowtexMipmap = true;              shadowMipmap[0] = true\nconst bool shadowtex0Mipmap = true;             shadowMipmap[0] = true\nconst bool shadowtex1Mipmap = true;             shadowMipmap[1] = true\nconst bool shadowcolor0Mipmap = true;           shadowColorMipmap[0] = true\nconst bool shadowColor0Mipmap = true;           shadowColorMipmap[0] = true\nconst bool shadowcolor1Mipmap = true;           shadowColorMipmap[1] = true\nconst bool shadowColor1Mipmap = true;           shadowColorMipmap[1] = true\nconst bool shadowtexNearest = true;             shadowFilterNearest[0] = true\nconst bool shadowtex0Nearest = true;            shadowFilterNearest[0] = true\nconst bool shadow0MinMagNearest = true;         shadowFilterNearest[0] = true\nconst bool shadowtex1Nearest = true;            shadowFilterNearest[1] = true\nconst bool shadow1MinMagNearest = true;         shadowFilterNearest[1] = true\nconst bool shadowcolor0Nearest = true;          shadowColorFilterNearest[0] = true\nconst bool shadowColor0Nearest = true;          shadowColorFilterNearest[0] = true\nconst bool shadowColor0MinMagNearest = true;    shadowColorFilterNearest[0] = true\nconst bool shadowcolor1Nearest = true;          shadowColorFilterNearest[1] = true\nconst bool shadowColor1Nearest = true;          shadowColorFilterNearest[1] = true\nconst bool shadowColor1MinMagNearest = true;    shadowColorFilterNearest[1] = true\n/* WETNESSHL:600.0 */                           wetnessHalfLife = 600 (ticks)\nconst float wetnessHalflife = 600.0f;           wetnessHalfLife = 600 (ticks)\n/* DRYNESSHL:200.0 */                           drynessHalfLife = 200 (ticks)\nconst float drynessHalflife = 200.0f;           drynessHalfLife = 200 (ticks)\nconst float eyeBrightnessHalflife = 10.0f;      eyeBrightnessHalflife = 10 (ticks)\nconst float centerDepthHalflife = 1.0f;         centerDepthSmoothHalflife = 1 (ticks)\nconst float sunPathRotation = 0f;               sunPathRotation = 0f\nconst float ambientOcclusionLevel = 1.0f;       ambientOcclusionLevel = 1.0f                               0.0f = AO disabled, 1.0f = vanilla AO\nconst int superSamplingLevel = 1;               superSamplingLevel = 1\nconst int noiseTextureResolution = 256;         noiseTextureResolution = 256\n/* GAUX4FORMAT:RGBA32F */                       buffersFormat[7] = GL_RGBA32F\n/* GAUX4FORMAT:RGB32F */                        buffersFormat[7] = GL_RGB32F\n/* GAUX4FORMAT:RGB16 */                         buffersFormat[7] = GL_RGB16\nconst int <bufferIndex>Format = <format>;       bufferFormats[index] = <format>                            See "Draw Buffer Index" and "Texture Formats"\nconst bool <bufferIndex>Clear = false;          gbuffersClear[index] = false                               Skip glClear() for the given buffer, only for "composite" and "deferred" programs \nconst vec4 <bufferIndex>ClearColor = vec4();    gbuffersClearColor[index] = vec4(r, g, b, a)               Clear color for the given buffer, only for "composite" and "deferred" programs \nconst bool <bufferIndex>MipmapEnabled = true;   bufferMipmaps[index] = true                                Only for programs "composite" , "deferred" and "final"\nconst int <shadowBufferIx>Format = <format>;    shadowBufferFormats[index] = <format>                      See "Shadow Buffer Index" and "Texture Formats"\nconst bool <shadowBufferIx>Clear = false;       shadowBuffersClear[index] = false                          Skip glClear() for the given shadow color buffer \nconst vec4 <shadowBufferIx>ClearColor = vec4(); shadowBuffersClearColor[index] = vec4(r, g, b, a)          Clear color for the given shadow color buffer\n/* DRAWBUFFERS:0257 */                          drawBuffers = {0, 2, 5, 7)                                 Only buffers 0 to 9 can be used.\n/* RENDERTARGETS: 0,2,11,15 */                  drawBuffers = {0, 2, 11, 15}                               Buffers 0 to 15 can be used\n\nDraw Buffer Index\n=================\nPrefix                  Index\n==================================\ncolortex<0-15>          0-15\ngcolor                  0\ngdepth                  1\ngnormal                 2\ncomposite               3\ngaux1                   4\ngaux2                   5\ngaux3                   6\ngaux4                   7\n\nShadow Buffer Index\n===================\nPrefix                  Index\n==================================\nshadowcolor             0\nshadowcolor<0-1>        0-1\n \nTexture Formats\n===============\n1. 8-bit\n Normalized         Signed normalized  Integer            Unsigned integer\n =================  =================  =================  =================\n R8                 R8_SNORM           R8I                R8I\n RG8                RG8_SNORM          RG8I               RG8I\n RGB8               RGB8_SNORM         RGB8I              RGB8I\n RGBA8              RGBA8_SNORM        RGBA8I             RGBA8I\n2. 16-bit\n Normalized         Signed normalized  Float              Integer            Unsigned integer\n =================  =================  =================  =================  =================\n R16                R16_SNORM          R16F               R16I               R16UI    \n RG16               RG16_SNORM         RG16F              RG16I              RG16UI   \n RGB16              RGB16_SNORM        RGB16F             RGB16I             RGB16UI  \n RGBA16             RGBA16_SNORM       RGBA16F            RGBA16I            RGBA16UI \n3. 32-bit\n Float              Integer            Unsigned integer\n =================  =================  =================\n R32F               R32I               R32UI\n RG32F              RG32I              RG32UI\n RGB32F             RGB32I             RGB32UI\n RGBA32F            RGBA32I            RGBA32UI\n4. Mixed\n R3_G3_B2\n RGB5_A1\n RGB10_A2\n R11F_G11F_B10F\n RGB9_E5\n\nPixel Formats\n=============\n1. Normalized\n RED\n RG\n RGB\n BGR\n RGBA\n BGRA\n2. Integer\n RED_INTEGER\n RG_INTEGER\n RGB_INTEGER\n BGR_INTEGER\n RGBA_INTEGER\n BGRA_INTEGER\n\nPixel Types\n===========\n BYTE\n SHORT\n INT\n HALF_FLOAT\n FLOAT\n UNSIGNED_BYTE\n UNSIGNED_BYTE_3_3_2\n UNSIGNED_BYTE_2_3_3_REV\n UNSIGNED_SHORT\n UNSIGNED_SHORT_5_6_5\n UNSIGNED_SHORT_5_6_5_REV\n UNSIGNED_SHORT_4_4_4_4\n UNSIGNED_SHORT_4_4_4_4_REV\n UNSIGNED_SHORT_5_5_5_1\n UNSIGNED_SHORT_1_5_5_5_REV\n UNSIGNED_INT\n UNSIGNED_INT_8_8_8_8\n UNSIGNED_INT_8_8_8_8_REV\n UNSIGNED_INT_10_10_10_2\n UNSIGNED_INT_2_10_10_10_REV\n\nBlock ID mapping\n================\nThe block ID mapping is defined in "shaders/block.properties" included in the shader pack.\nForge mods may add custom block mapping as "assets/<modid>/shaders/block.properties" in the mod JAR file.\nThe "block.properties" file can use conditional preprocessor directives (#ifdef, #if, etc.)\nFor more details see section "Standard Macros" A to I. Option macros are also available.\nFormat "block.<id>=<block1> <block2> ..."\nThe key is the substitute block ID, the values are the blocks which are to be replaced.\nOnly one line per block ID is allowed.\nSee "properties_files.txt" for the block matching rules.\n\n  # Short format\n  block.31=red_flower yellow_flower reeds\n  # Long format\n  block.32=minecraft:red_flower ic2:nether_flower botania:reeds\n  # Properties\n  block.33=minecraft:red_flower:type=white_tulip minecraft:red_flower:type=pink_tulip botania:reeds:type=green\n\nSee "properties.files" for more details.\n\nBlock render layers\n===================\nThe custom block render layers are defined in "shaders/block.properties" included in the shader pack.\n\n  layer.solid=<blocks>\n  layer.cutout=<blocks>\n  layer.cutout_mipped=<blocks>\n  layer.translucent=<blocks>\n\nLayers\n  solid - no alpha, no blending (solid textures)\n  cutout - alpha, no blending (cutout textures)\n  cutout_mipped - alpha, no blending, mipmaps (cutout with mipmaps)\n  translucent - alpha, blending, mipmaps (water, stained glass)\n \nBlocks which are solid opaque cubes (stone, dirt, ores, etc) can\'t be rendered on a custom layer\nas this would affect face culling, ambient occlusion, light propagation and so on.\n\nFor exaple:\n  layer.translucent=glass_pane fence wooden_door\n\nItem ID mapping\n================\nThe item ID mapping is defined in "shaders/item.properties" included in the shader pack.\nForge mods may add custom item mapping as "assets/<modid>/shaders/item.properties" in the mod JAR file.\nThe "item.properties" file can use conditional preprocessor directives (#ifdef, #if, etc.)\nFor more details see section "Standard Macros" A to I. Option macros are also available.\nFormat "item.<id>=<item1> <item2> ..."\nThe key is the substitute item ID, the values are the items which are to be replaced.\nOnly one line per item ID is allowed.\n\n  # Short format\n  item.5000=diamond_sword dirt\n  # Long format\n  item.5001=minecraft:diamond_sword botania:reeds\n\nEntity ID mapping\n=================\nThe entity ID mapping is defined in "shaders/entity.properties" included in the shader pack.\nForge mods may add custom entity mapping as "assets/<modid>/shaders/entity.properties" in the mod JAR file.\nThe "entity.properties" file can use conditional preprocessor directives (#ifdef, #if, etc.)\nFor more details see section "Standard Macros" A to I. Option macros are also available.\nFormat "entity.<id>=<entity1> <entity2> ..."\nThe key is the substitute entity ID, the values are the entities which are to be replaced.\nOnly one line per entity ID is allowed.\n\n  # Short format\n  entity.2000=sheep cow\n  # Long format\n  entity.2001=minecraft:pig botania:pixie\n\nStandard Macros\n===============\nThe standard macros are automatically included after the "#version" declaration in every shader file\n\nA. Minecraft version\n #define MC_VERSION <value>\n The value is in format 122 (major 1, minor 2, release 2)\n For example: 1.9.4 -> 10904, 1.11.2 -> 11102, etc.\n\nB. Maximum supported GL version\n #define MC_GL_VERSION <value>\n The value is integer, for example: 210, 320, 450\n\nC. Maximum supported GLSL version\n #define MC_GLSL_VERSION <value>\n The value is integer, for example: 120, 150, 450\n\nD. Operating system \n One of the following:\n  #define MC_OS_WINDOWS\n  #define MC_OS_MAC\n  #define MC_OS_LINUX\n  #define MC_OS_OTHER\n\nE. Driver\n One of the following:\n  #define MC_GL_VENDOR_AMD\n  #define MC_GL_VENDOR_ATI\n  #define MC_GL_VENDOR_INTEL\n  #define MC_GL_VENDOR_MESA\n  #define MC_GL_VENDOR_NVIDIA\n  #define MC_GL_VENDOR_XORG\n  #define MC_GL_VENDOR_OTHER\n\nF. GPU\n One of the following:\n  #define MC_GL_RENDERER_RADEON \n  #define MC_GL_RENDERER_GEFORCE\n  #define MC_GL_RENDERER_QUADRO\n  #define MC_GL_RENDERER_INTEL\n  #define MC_GL_RENDERER_GALLIUM\n  #define MC_GL_RENDERER_MESA\n  #define MC_GL_RENDERER_OTHER\n\nG. OpenGL extensions\n Macros for the supported OpenGL extensions are named like the corresponding extension with a prefix "MC_".\n For example the macro "MC_GL_ARB_shader_texture_lod" is defined when the extension "GL_ARB_shader_texture_lod" is supported.\n Only the macros which are referenced and supported are added to the shader file.\n\nH. Options\n #define MC_FXAA_LEVEL <value>             // When FXAA is enabled, values: 2, 4\n #define MC_NORMAL_MAP                     // When the normal map is enabled\n #define MC_SPECULAR_MAP                   // When the specular map is enabled\n #define MC_RENDER_QUALITY <value>         // Values: 0.5, 0.70710677, 1.0, 1.4142135, 2.0\n #define MC_SHADOW_QUALITY <value>         // Values: 0.5, 0.70710677, 1.0, 1.4142135, 2.0\n #define MC_HAND_DEPTH <value>             // Values: 0.0625, 0.125, 0.25\n #define MC_OLD_HAND_LIGHT                 // When Old Hand Light is enabled\n #define MC_OLD_LIGHTING                   // When Old Lighting is enabled\n #define MC_ANISOTROPIC_FILTERING <value>  // When anisotropic filtering is enabled\n\nI. Textures \n #define MC_TEXTURE_FORMAT_LAB_PBR       // Texture format LabPBR (https://github.com/rre36/lab-pbr/wiki)\n #define MC_TEXTURE_FORMAT_LAB_PBR_1_3   // Version 1.3\n (see "texture.properties")\n\nJ. Render stages\n // Constants for the uniform "renderStage"\n // The constants are given in the order in which the stages are executed\n #define MC_RENDER_STAGE_NONE <const>                    // Undefined\n #define MC_RENDER_STAGE_SKY <const>                     // Sky\n #define MC_RENDER_STAGE_SUNSET <const>                  // Sunset and sunrise overlay\n #define MC_RENDER_STAGE_CUSTOM_SKY <const>              // Custom sky\n #define MC_RENDER_STAGE_SUN <const>                     // Sun\n #define MC_RENDER_STAGE_MOON <const>                    // Moon\n #define MC_RENDER_STAGE_STARS <const>                   // Stars\n #define MC_RENDER_STAGE_VOID <const>                    // Void\n #define MC_RENDER_STAGE_TERRAIN_SOLID <const>           // Terrain solid\n #define MC_RENDER_STAGE_TERRAIN_CUTOUT_MIPPED <const>   // Terrain cutout mipped\n #define MC_RENDER_STAGE_TERRAIN_CUTOUT <const>          // Terrain cutout\n #define MC_RENDER_STAGE_ENTITIES <const>                // Entities\n #define MC_RENDER_STAGE_BLOCK_ENTITIES <const>          // Block entities\n #define MC_RENDER_STAGE_DESTROY <const>                 // Destroy overlay\n #define MC_RENDER_STAGE_OUTLINE <const>                 // Selection outline\n #define MC_RENDER_STAGE_DEBUG <const>                   // Debug renderers\n #define MC_RENDER_STAGE_HAND_SOLID <const>              // Solid handheld objects\n #define MC_RENDER_STAGE_TERRAIN_TRANSLUCENT <const>     // Terrain translucent\n #define MC_RENDER_STAGE_TRIPWIRE <const>                // Tripwire string\n #define MC_RENDER_STAGE_PARTICLES <const>               // Particles\n #define MC_RENDER_STAGE_CLOUDS <const>                  // Clouds\n #define MC_RENDER_STAGE_RAIN_SNOW <const>               // Rain and snow\n #define MC_RENDER_STAGE_WORLD_BORDER <const>            // World border\n #define MC_RENDER_STAGE_HAND_TRANSLUCENT <const>        // Translucent handheld objects\n\nReferences\n==========\n http://daxnitro.wikia.com/wiki/Editing_Shaders_%28Shaders2%29\n http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-mods/1286604-shaders-mod-updated-by-karyonix\n http://www.minecraftforum.net/forums/search?by-author=karyonix&display-type=posts\n http://www.seas.upenn.edu/~cis565/fbo.htm#feedback\n')])])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);