(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{451:function(t,_,a){"use strict";a.r(_);var e=a(56),s=Object(e.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("center",[a("h1",[t._v("自定义实体模型")]),a("p",[t._v("Custom Entity Models")])]),t._v(" "),a("h2",{attrs:{id:"实体模型丨cem-model-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体模型丨cem-model-txt"}},[t._v("#")]),t._v(" 实体模型丨cem_model.txt")]),t._v(" "),a("p",[t._v('对于每一个你想要覆盖的实体模型或者方块实体模型，按照这个模板在 "assets/minecraft/optifine/cem" 文件夹下新建一个名称为 "<实体名>.jem" 的文件。')]),t._v(" "),a("p",[t._v('实体模型包含一系列实体部件模型。部件模型可以写在此文件内部，也可以从外部的 ".jpm" 文件读取。')]),t._v(" "),a("p",[t._v("特例:\n- 哞菇背后的蘑菇可以通过下列纹理自定义")]),t._v(" "),a("blockquote",[a("p",[t._v('"assets/minecraft/textures/entity/cow/red_mushroom.png"')]),t._v(" "),a("p",[t._v('"assets/minecraft/textures/entity/cow/brown_mushroom.png"')])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("实体名")]),t._v(" "),a("th",[t._v("部件名")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("armor_stand")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg, right, left, waist, base")])]),t._v(" "),a("tr",[a("td",[t._v("axolotl")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, tail, top_gills, left_gills, right_gills")])]),t._v(" "),a("tr",[a("td",[t._v("banner")]),t._v(" "),a("td",[t._v("slate, stand, top")])]),t._v(" "),a("tr",[a("td",[t._v("bat")]),t._v(" "),a("td",[t._v("head, body, right_wing, left_wing, outer_right_wing, outer_left_wing")])]),t._v(" "),a("tr",[a("td",[t._v("bee")]),t._v(" "),a("td",[t._v("body, torso, right_wing, left_wing, front_legs, middle_legs, back_legs, stinger, left_antenna, right_antenna")])]),t._v(" "),a("tr",[a("td",[t._v("bed")]),t._v(" "),a("td",[t._v("head, foot, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("bell")]),t._v(" "),a("td",[t._v("body")])]),t._v(" "),a("tr",[a("td",[t._v("blaze")]),t._v(" "),a("td",[t._v("head, stick1 ... stick12")])]),t._v(" "),a("tr",[a("td",[t._v("boat")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left, paddle_left, paddle_right, bottom_no_water")])]),t._v(" "),a("tr",[a("td",[t._v("cat")]),t._v(" "),a("td",[t._v("back_left_leg, back_right_leg, front_left_leg, front_right_leg, tail, tail2, head, body")])]),t._v(" "),a("tr",[a("td",[t._v("cat_collar")]),t._v(" "),a("td",[t._v("back_left_leg, back_right_leg, front_left_leg, front_right_leg, tail, tail2, head, body")])]),t._v(" "),a("tr",[a("td",[t._v("cave_spider")]),t._v(" "),a("td",[t._v("head, neck, body, leg1 ... leg8")])]),t._v(" "),a("tr",[a("td",[t._v("chest")]),t._v(" "),a("td",[t._v("lid, base, knob")])]),t._v(" "),a("tr",[a("td",[t._v("chest_large")]),t._v(" "),a("td",[t._v("lid_left, base_left, knob_left, lid_right, base_right, knob_right")])]),t._v(" "),a("tr",[a("td",[t._v("chest_minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("chicken")]),t._v(" "),a("td",[t._v("head, body, right_leg, left_leg, right_wing, left_wing, bill, chin")])]),t._v(" "),a("tr",[a("td",[t._v("cod")]),t._v(" "),a("td",[t._v("body, fin_back, head, nose, fin_right, fin_left, tail")])]),t._v(" "),a("tr",[a("td",[t._v("command_block_minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("conduit")]),t._v(" "),a("td",[t._v("base, eye, cage, wind")])]),t._v(" "),a("tr",[a("td",[t._v("cow")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("creeper")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("dragon")]),t._v(" "),a("td",[t._v("head, spine, jaw, body, left_wing, left_wing_tip, right_wing, right_wing_tip, front_left_leg, front_left_shin, front_left_foot, back_left_leg, back_left_shin, back_left_foot,  front_right_leg, front_right_shin, front_right_foot, back_right_leg, back_right_shin, back_right_foot")])]),t._v(" "),a("tr",[a("td",[t._v("donkey")]),t._v(" "),a("td",[t._v("<same as horse>, left_chest, right_chest")])]),t._v(" "),a("tr",[a("td",[t._v("dolphin")]),t._v(" "),a("td",[t._v("body, back_fin, left_fin, right_fin, tail, tail_fin, head")])]),t._v(" "),a("tr",[a("td",[t._v("drowned")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("elder_guardian")]),t._v(" "),a("td",[t._v("body, eye, spine1 ... spine12, tail1 ... tail3")])]),t._v(" "),a("tr",[a("td",[t._v("enchanting_book")]),t._v(" "),a("td",[t._v("cover_right, cover_left, pages_right, pages_left, flipping_page_right, flipping_page_left, book_spine")])]),t._v(" "),a("tr",[a("td",[t._v("ender_chest")]),t._v(" "),a("td",[t._v("lid, base, knob")])]),t._v(" "),a("tr",[a("td",[t._v("end_crystal")]),t._v(" "),a("td",[t._v("cube, glass, base")])]),t._v(" "),a("tr",[a("td",[t._v("enderman")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("endermite")]),t._v(" "),a("td",[t._v("body1 ... body4")])]),t._v(" "),a("tr",[a("td",[t._v("evoker")]),t._v(" "),a("td",[t._v("head, hat, body, arms, left_leg, right_leg, nose, left_arm, right_arm")])]),t._v(" "),a("tr",[a("td",[t._v("evoker_fangs")]),t._v(" "),a("td",[t._v("base, upper_jaw, lower_jaw")])]),t._v(" "),a("tr",[a("td",[t._v("fox")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, tail")])]),t._v(" "),a("tr",[a("td",[t._v("furnace_minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("ghast")]),t._v(" "),a("td",[t._v("body, tentacle1 ... tentacle9")])]),t._v(" "),a("tr",[a("td",[t._v("giant")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("glow_squid")]),t._v(" "),a("td",[t._v("body, tentacle1 ... tentacle8")])]),t._v(" "),a("tr",[a("td",[t._v("goat")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, left_horn, right_horn, nose")])]),t._v(" "),a("tr",[a("td",[t._v("guardian")]),t._v(" "),a("td",[t._v("body, eye, spine1 ... spine12, tail1 ... tail3")])]),t._v(" "),a("tr",[a("td",[t._v("head_dragon")]),t._v(" "),a("td",[t._v("head, jaw")])]),t._v(" "),a("tr",[a("td",[t._v("head_player")]),t._v(" "),a("td",[t._v("head")])]),t._v(" "),a("tr",[a("td",[t._v("head_skeleton")]),t._v(" "),a("td",[t._v("head")])]),t._v(" "),a("tr",[a("td",[t._v("head_wither_skeleton")]),t._v(" "),a("td",[t._v("head")])]),t._v(" "),a("tr",[a("td",[t._v("head_zombie")]),t._v(" "),a("td",[t._v("head")])]),t._v(" "),a("tr",[a("td",[t._v("hoglin")]),t._v(" "),a("td",[t._v("head, right_ear, left_ear, body, front_right_leg, front_left_leg, back_right_leg, back_left_leg, mane")])]),t._v(" "),a("tr",[a("td",[t._v("hopper_minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("horse")]),t._v(" "),a("td",[t._v("body, neck, back_left_leg, back_right_leg, front_left_leg, front_right_leg, tail, saddle, head, mane, mouth, left_ear, right_ear, left_bit, right_bit, left_rein, right_rein, headpiece, noseband, child_back_left_leg, child_back_right_leg, child_front_left_leg, child_front_right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("husk")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("illusioner")]),t._v(" "),a("td",[t._v("head, hat, body, arms, left_leg, right_leg, nose, left_arm, right_arm")])]),t._v(" "),a("tr",[a("td",[t._v("iron_golem")]),t._v(" "),a("td",[t._v("head, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("lead_knot")]),t._v(" "),a("td",[t._v("knot")])]),t._v(" "),a("tr",[a("td",[t._v("lectern_book")]),t._v(" "),a("td",[t._v("cover_right, cover_left, pages_right, pages_left, flipping_page_right, flipping_page_left, book_spine")])]),t._v(" "),a("tr",[a("td",[t._v("llama")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, chest_right, chest_left")])]),t._v(" "),a("tr",[a("td",[t._v("llama_decor")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, chest_right, chest_left")])]),t._v(" "),a("tr",[a("td",[t._v("llama_spit")]),t._v(" "),a("td",[t._v("body")])]),t._v(" "),a("tr",[a("td",[t._v("magma_cube")]),t._v(" "),a("td",[t._v("core, segment1 ... segment8")])]),t._v(" "),a("tr",[a("td",[t._v("minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("mooshroom")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("mule")]),t._v(" "),a("td",[t._v("<same as horse>, left_chest, right_chest")])]),t._v(" "),a("tr",[a("td",[t._v("ocelot")]),t._v(" "),a("td",[t._v("back_left_leg, back_right_leg, front_left_leg, front_right_leg, tail, tail2, head, body")])]),t._v(" "),a("tr",[a("td",[t._v("panda")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("parrot")]),t._v(" "),a("td",[t._v("head, body, tail, left_wing, right_wing, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("phantom")]),t._v(" "),a("td",[t._v("body, left_wing, left_wing_tip, right_wing, right_wing_tip, head, tail, tail2")])]),t._v(" "),a("tr",[a("td",[t._v("puffer_fish_big")]),t._v(" "),a("td",[t._v("body, fin_right, fin_left, spikes_front_top, spikes_middle_top, spikes_back_top, spikes_front_right, spikes_front_left, spikes_front_bottom, spikes_middle_bottom, spikes_back_bottom, spikes_back_right, spikes_back_left")])]),t._v(" "),a("tr",[a("td",[t._v("puffer_fish_medium")]),t._v(" "),a("td",[t._v("body, fin_right, fin_left, spikes_front_top, spikes_back_top, spikes_front_right, spikes_back_right, spikes_back_left, spikes_front_left, spikes_back_bottom, spikes_front_bottom")])]),t._v(" "),a("tr",[a("td",[t._v("puffer_fish_small")]),t._v(" "),a("td",[t._v("body, eye_right, eye_left, tail, fin_right, fin_left")])]),t._v(" "),a("tr",[a("td",[t._v("pig")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("piglin")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg, left_ear, right_ear, left_sleeve, right_sleeve, left_pants, right_pants, jacket")])]),t._v(" "),a("tr",[a("td",[t._v("piglin_brute")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg, left_ear, right_ear, left_sleeve, right_sleeve, left_pants, right_pants, jacket")])]),t._v(" "),a("tr",[a("td",[t._v("pillager")]),t._v(" "),a("td",[t._v("head, hat, body, arms, left_leg, right_leg, nose, left_arm, right_arm")])]),t._v(" "),a("tr",[a("td",[t._v("polar_bear")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("rabbit")]),t._v(" "),a("td",[t._v("left_foot, right_foot, left_thigh, right_thigh, body, left_arm, right_arm, head, right_ear, left_ear, tail, nose")])]),t._v(" "),a("tr",[a("td",[t._v("ravager")]),t._v(" "),a("td",[t._v("head, jaw, body, leg1 ... leg4, neck")])]),t._v(" "),a("tr",[a("td",[t._v("salmon")]),t._v(" "),a("td",[t._v("body_front, body_back, head, fin_back_1, fin_back_2, tail, fin_right, fin_left")])]),t._v(" "),a("tr",[a("td",[t._v("sheep")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("sheep_wool")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4")])]),t._v(" "),a("tr",[a("td",[t._v("shulker")]),t._v(" "),a("td",[t._v("head, base, lid")])]),t._v(" "),a("tr",[a("td",[t._v("shulker_box")]),t._v(" "),a("td",[t._v("base, lid")])]),t._v(" "),a("tr",[a("td",[t._v("shulker_bullet")]),t._v(" "),a("td",[t._v("bullet")])]),t._v(" "),a("tr",[a("td",[t._v("sign")]),t._v(" "),a("td",[t._v("board, stick")])]),t._v(" "),a("tr",[a("td",[t._v("silverfish")]),t._v(" "),a("td",[t._v("body1 ... body7, wing1 ... wing3")])]),t._v(" "),a("tr",[a("td",[t._v("skeleton")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("skeleton_horse")]),t._v(" "),a("td",[t._v("<same as horse>")])]),t._v(" "),a("tr",[a("td",[t._v("slime")]),t._v(" "),a("td",[t._v("body, left_eye, right_eye, mouth")])]),t._v(" "),a("tr",[a("td",[t._v("snow_golem")]),t._v(" "),a("td",[t._v("body, body_bottom, head, left_hand, right_hand")])]),t._v(" "),a("tr",[a("td",[t._v("spawner_minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("spider")]),t._v(" "),a("td",[t._v("head, neck, body, leg1, ... leg8")])]),t._v(" "),a("tr",[a("td",[t._v("squid")]),t._v(" "),a("td",[t._v("body, tentacle1 ... tentacle8")])]),t._v(" "),a("tr",[a("td",[t._v("stray")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("strider")]),t._v(" "),a("td",[t._v("body, right_leg, left_leg, hair_right_top, hair_right_middle, hair_right_bottom, hair_left_top, hair_left_middle, hair_left_bottom")])]),t._v(" "),a("tr",[a("td",[t._v("tnt_minecart")]),t._v(" "),a("td",[t._v("bottom, back, front, right, left")])]),t._v(" "),a("tr",[a("td",[t._v("trader_llama")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, chest_right, chest_left")])]),t._v(" "),a("tr",[a("td",[t._v("trader_llama_decor")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, chest_right, chest_left")])]),t._v(" "),a("tr",[a("td",[t._v("trapped_chest")]),t._v(" "),a("td",[t._v("lid, base, knob")])]),t._v(" "),a("tr",[a("td",[t._v("trapped_chest_large")]),t._v(" "),a("td",[t._v("lid_left, base_left, knob_left, lid_right, base_right, knob_right")])]),t._v(" "),a("tr",[a("td",[t._v("trident")]),t._v(" "),a("td",[t._v("body")])]),t._v(" "),a("tr",[a("td",[t._v("tropical_fish_a")]),t._v(" "),a("td",[t._v("body, tail, fin_right, fin_left, fin_top")])]),t._v(" "),a("tr",[a("td",[t._v("tropical_fish_b")]),t._v(" "),a("td",[t._v("body, tail, fin_right, fin_left, fin_top, fin_bottom")])]),t._v(" "),a("tr",[a("td",[t._v("tropical_fish_pattern_a")]),t._v(" "),a("td",[t._v("body, tail, fin_right, fin_left, fin_top")])]),t._v(" "),a("tr",[a("td",[t._v("tropical_fish_pattern_b")]),t._v(" "),a("td",[t._v("body, tail, fin_right, fin_left, fin_top, fin_bottom")])]),t._v(" "),a("tr",[a("td",[t._v("turtle")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, body2")])]),t._v(" "),a("tr",[a("td",[t._v("vex")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg, left_wing, right_wing")])]),t._v(" "),a("tr",[a("td",[t._v("villager")]),t._v(" "),a("td",[t._v("head, headwear, headwear2, body, bodywear, arms, left_leg, right_leg, nose")])]),t._v(" "),a("tr",[a("td",[t._v("vindicator")]),t._v(" "),a("td",[t._v("head, hat, body, arms, left_leg, right_leg, nose, left_arm, right_arm")])]),t._v(" "),a("tr",[a("td",[t._v("wandering_trader")]),t._v(" "),a("td",[t._v("head, headwear, headwear2, body, bodywear, arms, left_leg, right_leg, nose")])]),t._v(" "),a("tr",[a("td",[t._v("witch")]),t._v(" "),a("td",[t._v("head, headwear, headwear2, body, bodywear, arms, left_leg, right_leg, nose, mole")])]),t._v(" "),a("tr",[a("td",[t._v("wither")]),t._v(" "),a("td",[t._v("body1 ... body3, head1 ... head3")])]),t._v(" "),a("tr",[a("td",[t._v("wither_skeleton")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("wither_skull")]),t._v(" "),a("td",[t._v("head")])]),t._v(" "),a("tr",[a("td",[t._v("wolf")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, tail, mane")])]),t._v(" "),a("tr",[a("td",[t._v("wolf_collar")]),t._v(" "),a("td",[t._v("head, body, leg1 ... leg4, tail, mane")])]),t._v(" "),a("tr",[a("td",[t._v("zoglin")]),t._v(" "),a("td",[t._v("head, right_ear, left_ear, body, front_right_leg, front_left_leg, back_right_leg, back_left_leg, mane")])]),t._v(" "),a("tr",[a("td",[t._v("zombie")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("zombie_horse")]),t._v(" "),a("td",[t._v("<same as horse>")])]),t._v(" "),a("tr",[a("td",[t._v("zombie_pigman")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("zombie_villager")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg")])]),t._v(" "),a("tr",[a("td",[t._v("zombified_piglin")]),t._v(" "),a("td",[t._v("head, headwear, body, left_arm, right_arm, left_leg, right_leg, left_ear, left_sleeve, right_sleeve, left_pants, right_pants, jacket")])])])]),t._v(" "),a("p",[t._v('只有 "models" 和 "part" 是必需的.')]),t._v(" "),a("p",[t._v("注意: 这不是一个有效的JSON格式，只能作为参考")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"texture"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <texture.png>                                    - 实体模型使用的纹理\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"textureSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<width>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <height>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                          - 纹理尺寸 (像素)\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"shadowSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <shadow_size>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                - 模型阴影尺寸 ("),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(")\n  models                                                      - 模型列表\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"baseId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <parent_id>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                  - 模型的父类ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 所有父类属性都会被继承\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"model"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <model.jpm>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                   - 部件模型文件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("从中读取部件模型的定义\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <id>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                             - 模型ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 可以将模型引用为父类\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"part"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <part>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                         - 部件模型要附着的实体部件\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"attach"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("|"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                 - True"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 附着到实体部件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" False"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 取而代之\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scale"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <scale>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                       - 渲染尺寸"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 默认为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n      # 部件模型定义"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 详见"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cem_part.txt"')]),t._v("                       - 部件模型定义 (内部)\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"animations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"variable1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"expression1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                         - 详见"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cem_animation.txt"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"variable2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(' "expression2'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          ...\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      ...\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"部件模型丨cem-part-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部件模型丨cem-part-txt"}},[t._v("#")]),t._v(" 部件模型丨cem_part.txt")]),t._v(" "),a("p",[t._v('这个文件包含一个模型部件的定义，\n它可以在实体模型中被引用为 "model"。\n推荐使用文件扩展名 ".jpm"，但这并不是必须的。\n它应该位于资源包的 "assets/minecraft/optifine/cem" 文件夹下。')]),t._v(" "),a("p",[t._v('纹理的UV可以用 "textureOffset" 立方体格式指定，\n也可以用 "uvDown"、"uvUp"、"uvNorth"、 "uvSouth"、"uvWest" 和 "uvEast"单独指定。\n必须使用立方体格式和单面UV格式中的一个，它们不能混合使用。\n立方体格式的UV映射的示例为 "model_box.png"。')]),t._v(" "),a("p",[t._v("纹理可以被指定为：")]),t._v(" "),a("blockquote",[a("p",[t._v("\"texture\" - (no '/' in name), 在当前文件夹寻找")]),t._v(" "),a("p",[t._v('"./folder/texture" - 相对于当前文件夹')]),t._v(" "),a("p",[t._v('"~/folder/texture" - 相对于文件夹 "assets/minecraft/optifine/"')]),t._v(" "),a("p",[t._v('"folder/texture" - 相对于文件夹 "assets/minecraft/"')]),t._v(" "),a("p",[t._v('"mod:folder/texture - 解析为 "assets/mod/folder/texture.png"')])]),t._v(" "),a("p",[t._v('纹理的后缀名 ".png" 是可选的。')]),t._v(" "),a("p",[t._v("必需要素:")]),t._v(" "),a("ul",[a("li",[t._v('"textureOffset" 或者单面UV')]),t._v(" "),a("li",[t._v('"coordinates"')])]),t._v(" "),a("p",[t._v("注: 这不是一个有效的JSON格式，仅供参考")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  # 部件模型定义\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"texture"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <texture.png>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                                - 部件模型要使用的纹理\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"textureSize"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<width>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <height>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                      - 纹理的像素尺寸\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"invertAxis"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <axis_to_invert>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                          - 模型轴的翻转"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 例如 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xyz"')]),t._v(" 翻转所有轴\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"translate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<x>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <y>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <z>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                            - 平移 (像素)\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rotate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<angle_x>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <angle_y>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <angle_z>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("             - 旋转 (角度)\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mirrorTexture"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <axis_to_mirror>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                       - 纹理轴的翻转，例如 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uv"')]),t._v(" 同时翻转U轴和V轴\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boxes"')]),t._v("                                                  - 部件模型使用的立方体\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"textureOffset"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                         - 立方体格式的纹理偏移量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参阅 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"model_box.png"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uvDown"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <u2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                  - 底面UV\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uvUp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <u2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    - 顶面UV\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uvNorth"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <u2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 - 北面UV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 也称 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uvFront"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uvSouth"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <u2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 - 南面UV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 也称 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uvBack"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uvWest"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <u2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                  - 西面UV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 也称 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uvLeft"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uvEast"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v1>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <u2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v2>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                  - 东面UV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 也称 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uvRight"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<x>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <y>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <z>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <width>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <height>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <depth>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  - 立方体位置和尺寸\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sizeAdd"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <size_add>                               - 长度增量 (添加到所有维) 可以用作不对称缩放\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sprites"')]),t._v("                                                - 3D sprite models (depth "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(") \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"textureOffset"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<u>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <v>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                         - 纹理偏移量 (像素)\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("<x>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <y>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <z>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <width>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <height>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <depth>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  - 立方体位置和尺寸\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sizeAdd"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" <size_add>                                - 长度增量 (添加到所有维) 可以用作不对称缩放\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"submodel"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("                                              - 子模型 (附着到父模型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 跟随它移动和旋转)\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    # Part model definition                                - 子模型定义                          \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"submodels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("                                             - 多个子模型 (附着到父模型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 跟随它移动和旋转)\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      # Part model definition                               - 子模型定义                          \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"自定义实体模型动画丨cem-animation-txt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义实体模型动画丨cem-animation-txt"}},[t._v("#")]),t._v(" 自定义实体模型动画丨cem_animation.txt")]),t._v(" "),a("p",[t._v('每个要被动态化的模型变量(variables)都被分配了一个表达式(expression)。\n模型每次被渲染并将其值赋给变量时，都会对表达式求值。\n变量和表达式在json实体模型(JEM)的 "animation" 部分中定义。')]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"animations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"variable1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"表达式1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n     "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"variable2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"表达式2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     ...\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("strong",[t._v("变量（Variables）")])]),t._v(" "),a("p",[t._v("模型变量由此格式指定：")]),t._v(" "),a("ul",[a("li",[t._v('"<模型>.<变量名>"')])]),t._v(" "),a("p",[t._v("模型可能是:")]),t._v(" "),a("blockquote",[a("p",[t._v('"this" - 当前自定义模型')]),t._v(" "),a("p",[t._v('"part" - 当前自定义模型所依附的部件模型')]),t._v(" "),a("p",[t._v('"<part>" - 部件名指向的自定义模型')]),t._v(" "),a("p",[t._v('"<id>" - ID指向的自定义模型')]),t._v(" "),a("p",[t._v('"<part>:<sub_id>:<sub_sub_id>:..." - (分层结构) 首先按部件名查找原始模型，然后按ID查找子模型')]),t._v(" "),a("p",[t._v('"<id>:<sub_id>:<sub_sub_id>:..." - (分层结构) 首先按ID查找模型，然后按ID查找子模型')])]),t._v(" "),a("p",[t._v("如果存在重复，则使用根据部件名或ID找到的第一个模型。\n根据ID进行的模型搜索是深入的，在分层结构中也是如此。")]),t._v(" "),a("p",[t._v('分层结构让模型组 (json部件模型) 能够被不同部件再利用。\n例如一个手的模型 "shoulder:upper_arm:elbow:forearm:palm:finger[1.5]" 可以同时应用于左手和右手。\n动画可以使用 "left_hand:finger1" 表示左手拇指，"right_hand:finger1" 表示右手拇指。\n可以跳过分层结构中的中间层。')]),t._v(" "),a("p",[t._v("变量名")]),t._v(" "),a("blockquote",[a("p",[t._v("tx, ty, tz - 平移(translation) x, y, z")]),t._v(" "),a("p",[t._v("rx, ry, rz - 旋转(rotation) x, y, z")]),t._v(" "),a("p",[t._v("ox, oy, oz - 偏移(offset) x, y, z (偏移是绝对的, 不跟随模型缩放的, 可用于平移动画) //1.15.2被移除（2020/2/19）")]),t._v(" "),a("p",[t._v("sx, sy, sz - 缩放(scale) x, y, z")])]),t._v(" "),a("p",[a("strong",[t._v("表达式（Expressions）")])]),t._v(" "),a("p",[t._v("表达式是具有括号、常量、变量、运算符和函数的一般数学表达式。")]),t._v(" "),a("p",[t._v("常量")]),t._v(" "),a("blockquote",[a("p",[t._v("浮点数")]),t._v(" "),a("p",[t._v("pi - 3.1415926")]),t._v(" "),a("p",[t._v("true")]),t._v(" "),a("p",[t._v("false")])]),t._v(" "),a("p",[t._v("变量")]),t._v(" "),a("blockquote",[a("p",[t._v("<model>.<var> - 模型变量, 详见模型变量的说明")]),t._v(" "),a("p",[t._v("time - 当前世界的时刻(tick)")])]),t._v(" "),a("p",[t._v("渲染参数")]),t._v(" "),a("blockquote",[a("p",[t._v("limb_swing - 肢体动画计数器(limb animation counter)")]),t._v(" "),a("p",[t._v("limb_speed - 肢体移动速度(limb movement speed)")]),t._v(" "),a("p",[t._v("age - 按tick计算的年龄(age in ticks)")]),t._v(" "),a("p",[t._v("head_yaw - 头偏角(head yaw)")]),t._v(" "),a("p",[t._v("head_pitch - 头仰角(head pitch)")]),t._v(" "),a("p",[t._v("scale - 渲染比例(render scale)，默认为0.0625 //1.15.2被移除（2020/2/19）")])]),t._v(" "),a("p",[t._v("实体参数 (浮点型)")]),t._v(" "),a("blockquote",[a("p",[t._v("health")]),t._v(" "),a("p",[t._v("hurt_time")]),t._v(" "),a("p",[t._v("idle_time")]),t._v(" "),a("p",[t._v("max_health")]),t._v(" "),a("p",[t._v("move_forward")]),t._v(" "),a("p",[t._v("move_strafing")]),t._v(" "),a("p",[t._v("pos_x, pos_y, pos_z")]),t._v(" "),a("p",[t._v("revenge_time")]),t._v(" "),a("p",[t._v("swing_progress")])]),t._v(" "),a("p",[t._v("实体参数 (true/false)")]),t._v(" "),a("blockquote",[a("p",[t._v("is_alive")]),t._v(" "),a("p",[t._v("is_burning")]),t._v(" "),a("p",[t._v("is_child")]),t._v(" "),a("p",[t._v("is_glowing")]),t._v(" "),a("p",[t._v("is_hurt")]),t._v(" "),a("p",[t._v("is_in_hand")]),t._v(" "),a("p",[t._v("is_in_item_frame")]),t._v(" "),a("p",[t._v("is_in_ground")]),t._v(" "),a("p",[t._v("is_on_head")]),t._v(" "),a("p",[t._v("is_in_gui")]),t._v(" "),a("p",[t._v("is_in_lava")]),t._v(" "),a("p",[t._v("is_in_water")]),t._v(" "),a("p",[t._v("is_invisible")]),t._v(" "),a("p",[t._v("is_on_ground")]),t._v(" "),a("p",[t._v("is_ridden")]),t._v(" "),a("p",[t._v("is_riding")]),t._v(" "),a("p",[t._v("is_sneaking")]),t._v(" "),a("p",[t._v("is_sprinting")]),t._v(" "),a("p",[t._v("is_wet")])]),t._v(" "),a("p",[t._v("运算符")]),t._v(" "),a("blockquote",[a("p",[t._v("+, -, *, /, %")]),t._v(" "),a("p",[t._v("!, &&, ||")]),t._v(" "),a("p",[t._v(">, >=, <, <=, ==, !=")])]),t._v(" "),a("p",[t._v("函数")]),t._v(" "),a("blockquote",[a("p",[t._v("sin(x)")]),t._v(" "),a("p",[t._v("cos(x)")]),t._v(" "),a("p",[t._v("asin(x)")]),t._v(" "),a("p",[t._v("acos(x)")]),t._v(" "),a("p",[t._v("tan(x)")]),t._v(" "),a("p",[t._v("atan(x)")]),t._v(" "),a("p",[t._v("atan2(y, x)")]),t._v(" "),a("p",[t._v("torad(deg)")]),t._v(" "),a("p",[t._v("todeg(rad)")]),t._v(" "),a("p",[t._v("min(x, y ,...)")]),t._v(" "),a("p",[t._v("max(x, y, ...)")]),t._v(" "),a("p",[t._v("clamp(x, min, max)              将一个值限制在最小值和最大值之间")]),t._v(" "),a("p",[t._v("abs(x)")]),t._v(" "),a("p",[t._v("floor(x)")]),t._v(" "),a("p",[t._v("ceil(x)")]),t._v(" "),a("p",[t._v("exp(x)")]),t._v(" "),a("p",[t._v("frac(x)")]),t._v(" "),a("p",[t._v("log(x)")]),t._v(" "),a("p",[t._v("pow(x, y)")]),t._v(" "),a("p",[t._v("random(x)")]),t._v(" "),a("p",[t._v("round(x)")]),t._v(" "),a("p",[t._v("signum(x)")]),t._v(" "),a("p",[t._v("sqrt(x)")]),t._v(" "),a("p",[t._v("fmod(x, y)                             与 Math.floorMod() 类似")]),t._v(" "),a("p",[t._v("if(cond, val, [cond2, val2, ...], val_else)  基于一个或更多条件选择一个值")])]),t._v(" "),a("p",[t._v("布尔函数")]),t._v(" "),a("blockquote",[a("p",[t._v("between(x, min, max)              检查一个值是否在最大和最小值之间")]),t._v(" "),a("p",[t._v("equals(x, y, epsilon)                将两个浮点数和误差范围进行比较")]),t._v(" "),a("p",[t._v("in(x, val1, val2, ...)                检查一个值是否和多个值之一相等")])]),t._v(" "),a("p",[a("strong",[t._v("示例：")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("   ...\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"animations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"this.rx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clamp(-0.5 * part.rx, 0, 90)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"this.tx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3 * sin(limb_swing / 4) - 2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"this:Hoof.rx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"if(leg4:Hoof.rx > 90, leg4:Hoof.rx - 90, 0)"')]),t._v("\n       ...\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])],1)}),[],!1,null,null,null);_.default=s.exports}}]);