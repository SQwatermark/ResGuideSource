(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{436:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"简化ctm方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简化ctm方法"}},[t._v("#")]),t._v(" 简化CTM方法")]),t._v(" "),a("p",[t._v("前面我们提到，对于一些简单的情况，制47张纹理过于繁琐了，于是OptiFine提供了一种简化方法，只需要5张纹理：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/28/MEqVZPOyz1SdnLe.png",alt:""}})]),t._v(" "),a("p",[t._v("是不是很神奇？这五张纹理是如何变成游戏中看到的样子的？")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 借用一下CTM模组的设计，CTM模组是Chisel团队开发的独立于OptiFine的，可以实现连接纹理的模组：\n * ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────┐\n * │ 0.png           │ │ 1.png           │ │ 2.png           │\n * │ ╔══════╤══════╗ │ │  ──────┼──────  │ │ ║──────┼──────║ │\n * │ ║      │      ║ │ │ │      │      │ │ │ ║      │      ║ │\n * │ ║ 0    │ 1    ║ │ │ │ 4    │ 5    │ │ │ ║ 8    │ 9    ║ │\n * │ ╟──────┼──────╢ │ │ │──────┼──────│ │ │ ║──────┼──────║ │\n * │ ║      │      ║ │ │ │      │      │ │ │ ║      │      ║ │\n * │ ║ 2    │ 3    ║ │ │ │ 6    │ 7    │ │ │ ║ 10   │11    ║ │\n * │ ╚══════╧══════╝ │ │  ──────┼──────  │ │ ║──────┼──────║ │\n * └─────────────────┘ └─────────────────┘ └─────────────────┘ \n * ┌─────────────────┐ ┌─────────────────┐\n * │ 3.png           │ │ 4.png           │\n * │ ═══════╤═══════ │ │ ╝ ─────┼───── ╚ │\n * │ │      │      │ │ │ │      │      │ │\n * │ │ 12   │ 13   │ │ │ │ 16   │ 17   │ │\n * │ │──────┼──────│ │ │ │──────┼──────│ │\n * │ │      │      │ │ │ │      │      │ │\n * │ │ 14   │ 15   │ │ │ │ 18   │ 19   │ │\n * │ ═══════╧═══════ │ │ ╗ ─────┼───── ╔ │\n * └─────────────────┘ └─────────────────┘ \n * \n * 如图所示，在程序内部，这五张图片被横一刀竖一刀拆分成了20张小图片。\n * 通过拼接这20张小图片，可以得到CTM方法的47张图片（然而开了脑洞的ctm是无法用简化ctm方法实现的）。\n * \n * 连接0,13,2,15，我们可以获得一张向右连接的纹理（CTM方法的1号纹理）：\n * ╔══════╤═══════\n * ║      │      │\n * ║ 0    │ 13   │\n * ╟──────┼──────┼\n * ║      │      │\n * ║ 2    │ 15   │\n * ╚══════╧═══════\n * \n * 连接8,17,2,15, 我们可以获得一张L形拐角纹理，连接到右侧和上方（CTM方法的16号纹理）\n * \n * ║ ─────┼───── ╚\n * ║      │      │\n * ║ 8    │ 17   │\n * ╟──────┼──────┼\n * ║      │      │\n * ║ 2    │ 15   │\n * ╚══════╧═══════\n * \n */")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("玻璃板使用简化CTM方法会出bug！")]),t._v(" "),a("p",[t._v("详见这个issue："),a("a",{attrs:{href:"https://github.com/sp614x/optifine/issues/463",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/sp614x/optifine/issues/463"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"失败的尝试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#失败的尝试"}},[t._v("#")]),t._v(" 失败的尝试")]),t._v(" "),a("p",[t._v("虽然知道有bug，但是简化CTM还是很诱人的，我还是尝试用简化CTM方法制作了玻璃纹理（1号纹理黑了是因为它现在彻底透明了）：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/28/h4Vt1muqas6bR7E.png",alt:"image-20200709102736870"}})]),t._v(" "),a("p",[a("strong",[t._v("glass.properties")])]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("ctm_compact")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("tiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("0-4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("matchBlocks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("minecraft:glass")]),t._v("\n")])])]),a("p",[t._v("我们看到简化CTM方法用于玻璃还是非常的稳健：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/28/5XqORicLnowelB4.png",alt:"image-20200709102709736"}})]),t._v(" "),a("p",[t._v("我们再试着用于玻璃板：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/28/gQwRABM5U71DKik.png",alt:"image-20200709102856643"}})]),t._v(" "),a("p",[t._v("它的顶部也被连接了，我们加上faces=sides将连接纹理限制在侧面：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("ctm_compact")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("tiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("0-4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("matchBlocks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("minecraft:glass_pane")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("faces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("sides")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/28/kegdjGbQc7Fr6Nf.png",alt:"image-20200709104553553"}})]),t._v(" "),a("p",[t._v("至此我以为简化CTM玻璃板不过如此，直到我转到了另一面：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/28/QBfXY3qnCvORzg2.png",alt:"image-20200709104851371"}})]),t._v(" "),a("p",[t._v("这种问题的确不是我有办法解决的，只能放弃了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);